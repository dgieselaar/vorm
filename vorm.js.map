{"version":3,"sources":["_.js","VormEvent.js","VormFieldCtrl.js","VormModelDelegate.js","VormValueScope.js","VormValueType.js","ngModel.js","vormChange.js","vormControl.js","vormControlList.js","vormDelegateButton.js","vormField.js","vormFieldConfig.js","vormFieldTemplate.js","vormFieldWrapper.js","vormFieldset.js","vormFocusableList.js","vormForm.js","vormInvoke.js","vormLabel.js","vormSubmit.js","vormTemplateService.js","types/checkboxList.js","types/input.js","types/radio.js","types/select.js","types/textarea.js"],"names":["angular","module","factory","$document","$window","VormEvent","undefined","CustomEvent","type","data","detail","bubbles","error","event","createEvent","initCustomEvent","$rootScope","VormValueType","VormValueScope","name","element","getDefaultValue","defaults","valueType","SINGLE","LIST","NAMED","setModelValue","model","value","$viewChangeListeners","$modelValue","$$writeModelToScope","listeners","applyValueToControls","valueScope","models","_","each","index","modelsToChange","concat","val","key","find","$name","pull","getModelValue","pluck","handleViewChange","ctrl","triggerViewChange","handleFormatterCall","triggerModelChange","viewChangeListeners","modelChangeListeners","prefix","required","dispatchEvent","invoke","getName","setName","arguments","addModel","push","$formatters","removeModel","getModels","getValue","getValueType","setValueType","indexOf","Error","setValue","isRequired","setRequired","r","isEmpty","every","$isEmpty","setValueScope","scope","$destroy","chain","split","map","zipObject","mapValues","m","substr","length","capitalize","getClassObj","forEach","capitalized","propertyName","method","outerArgs","apply","delegate","ngModel","setNgModel","getNgModel","clearViewValue","$setViewValue","$render","$new","constant","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","err","TypeError","directive","VormFieldCtrl","require","link","attrs","controllers","_controllers","vormField","vorm","addField","$on","removeField","$parse","handleChange","cb","$event","vormChange","bind","matchesFuncName","createElement","restrict","controller","$scope","$element","$attrs","vormFieldConfig","vormFocusableList","vormFieldTemplate","this","inputId","Math","random","toString","slice","invokeData","getData","getConfig","addId","getModelCompiler","clonedElement","focusable","selector","replace","replaceWith","className","querySelector","attr","getInputId","$$postDigest","$eval","getOptions","version","minor","options","nwOpts","equals","removeId","controllerAs","VormModelDelegate","triggerAsyncViewChange","callback","unwatch","$watchCollection","setFocus","id","getId","el","getElementById","focus","delegates","limit","NaN","$watch","getLimit","setLimit","createDelegate","getDelegates","removeDelegate","clearDelegate","l","Number","reachedLimit","isClearButtonVisible","handleCreateClick","handleClearClick","shift","template","vormControlList","handleClick","isDisabled","isVisible","getLabel","config","typeOptions","addLabel","extend","vormInvoke","vormForm","invokable","values","getValues","$values","vormTemplateService","wrapperEl","getDefaultTemplate","querySelectorAll","getDefaultControlTemplate","outerHTML","compiler","copy","label","modelTemplate","wrapped","append","transclude","vals","getValueScope","getFields","fields","field","when","expr","ids","changeListeners","listener","submitListeners","indexBy","toUpperCase","$injector","locals","last","$inject","invoker","handleSubmit","vormSubmit","provider","modifyModelTemplates","processor","modelTemplates","modifyTemplate","processedEl","wrapperTemplate","modifyControlTemplate","wrapper","controlTemplate","innerHTML","registerType","modelCompilers","$get","$compile","modelEl","some","childEl","hasAttribute","vormTemplateServiceProvider","templates","placeholder","includes"],"mappings":"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","file":"vorm.js","sourcesContent":["/*global require*/\n(function ( ) {\n\t\n\tangular.module('vorm', []);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormEvent', [ '$document', '$window', function ( $document, $window ) {\n\t\t\t\n\t\t\tlet VormEvent;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst event = new $window.CustomEvent('foo'); // jshint ignore:line\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\treturn new $window.CustomEvent(type, {\n\t\t\t\t\t\tdetail: data,\n\t\t\t\t\t\tbubbles: true\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t} catch ( error ) {\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\tconst event = $document[0].createEvent('CustomEvent');\n\t\t\t\t\tevent.initCustomEvent(type, true, true, data);\n\t\t\t\t\treturn event;\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\treturn VormEvent;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormFieldCtrl', [ '$rootScope', 'VormEvent', 'VormValueType', 'VormValueScope', function ( $rootScope, VormEvent, VormValueType, VormValueScope ) {\n\t\t\t\n\t\t\treturn function ( name, element ) {\n\t\t\t\t\n\t\t\t\tconst ctrl = {},\n\t\t\t\t\tmodels = [],\n\t\t\t\t\tviewChangeListeners = [],\n\t\t\t\t\tmodelChangeListeners = [],\n\t\t\t\t\tprefix = 'vorm-field-';\n\t\t\t\t\n\t\t\t\tlet valueType = VormValueType.SINGLE,\n\t\t\t\t\trequired,\n\t\t\t\t\tvalueScope = new VormValueScope();\n\t\t\t\t\n\t\t\t\tfunction getDefaultValue ( ) {\n\t\t\t\t\tlet defaults;\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tdefaults = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tdefaults = [];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tdefaults = {};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn defaults;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction setModelValue ( model, value ) {\n\t\t\t\t\t// $$writeModelToScope calls the view listeners\n\t\t\t\t\t// and we don't really want that\n\t\t\t\t\tconst { $viewChangeListeners, $modelValue } = model;\n\t\t\t\t\t\t\n\t\t\t\t\tmodel.$viewChangeListeners = [];\n\t\t\t\t\tmodel.$modelValue = value;\n\t\t\t\t\tmodel.$$writeModelToScope();\n\t\t\t\t\t\n\t\t\t\t\t// reset all the things\n\t\t\t\t\tmodel.listeners = $viewChangeListeners;\n\t\t\t\t\tmodel.$modelValue = $modelValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction applyValueToControls ( ) {\n\t\t\t\t\tvar value = valueScope[name];\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tif(models[0]) {\n\t\t\t\t\t\t\tsetModelValue(models[0], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\t_.each(models, function ( model, index ) {\n\t\t\t\t\t\t\tsetModelValue(model, value[index]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tconst modelsToChange = models.concat();\n\t\t\t\t\t\t_.each(value, function ( val, key ) {\n\t\t\t\t\t\t\tvar model = _.find(models, { $name: key });\n\t\t\t\t\t\t\tif(model) {\n\t\t\t\t\t\t\t\tsetModelValue(model, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_.pull(modelsToChange, model);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(modelsToChange, function ( model ) {\n\t\t\t\t\t\t\tsetModelValue(model, undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction getModelValue ( ) {\n\t\t\t\t\tlet value;\n\t\t\t\t\t\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tvalue = models[0] ? models[0].$modelValue : undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tvalue = _.pluck(models, '$modelValue');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t\t_.each(models, function ( model) {\n\t\t\t\t\t\t\tvalue[model.$name] = model.$modelValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleViewChange ( ) {\n\t\t\t\t\t// value changes from view\n\t\t\t\t\tvalueScope[name] = getModelValue();\n\t\t\t\t\tctrl.triggerViewChange();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleFormatterCall ( value ) {\n\t\t\t\t\t// value changes from model\n\t\t\t\t\tvalueScope[name] = getModelValue();\n\t\t\t\t\tctrl.triggerModelChange();\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tctrl.triggerModelChange = function ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('modelchange', { name: name } ));\n\t\t\t\t\t_.invoke(modelChangeListeners, 'call', null, name);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.triggerViewChange = function ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('viewchange', { name: name } ));\n\t\t\t\t\t_.invoke(viewChangeListeners, 'call', null, name);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setName = function ( ) {\n\t\t\t\t\tname = arguments[0];\n\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\tctrl.addModel = function ( model ) {\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tmodel.$viewChangeListeners.push(handleViewChange);\n\t\t\t\t\tmodel.$formatters.push(handleFormatterCall);\n\t\t\t\t\tvalueScope[name] = getModelValue();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.removeModel = function ( model ) {\n\t\t\t\t\t_.pull(models, model);\n\t\t\t\t\t_.pull(model.$viewChangeListeners, handleViewChange);\n\t\t\t\t\t_.pull(model.$formatters, handleFormatterCall);\n\t\t\t\t\tvalueScope[name] = getModelValue();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getModels = function ( ) {\n\t\t\t\t\treturn models;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValue = function ( ) {\n\t\t\t\t\treturn valueScope[name];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValueType = function ( ) {\n\t\t\t\t\treturn valueType;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueType = function ( type ) {\n\t\t\t\t\tif([ VormValueType.SINGLE, VormValueType.LIST, VormValueType.NAMED ].indexOf(type) === -1) {\n\t\t\t\t\t\tthrow new Error('Unsupported VormValueType: ' + VormValueType);\n\t\t\t\t\t}\n\t\t\t\t\tvalueType = type;\n\t\t\t\t\tvalueScope[name] = getDefaultValue();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValue = function ( value ) {\n\t\t\t\t\tvalueScope[name] = value;\n\t\t\t\t\tapplyValueToControls();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\treturn required;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setRequired = function ( r ) {\n\t\t\t\t\trequired = !!r;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isEmpty = function ( ) {\n\t\t\t\t\treturn models.every(function ( model ) {\n\t\t\t\t\t\treturn model.$isEmpty();\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueScope = function ( scope ) {\n\t\t\t\t\tlet val = valueScope[name];\n\t\t\t\t\tif(valueScope) {\n\t\t\t\t\t\tvalueScope.$destroy();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvalueScope = scope;\n\t\t\t\t\tvalueScope[name] = val;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet chain = _('valid invalid dirty pristine touched untouched required empty'.split(' '))\n\t\t\t\t\t\t.map(function ( key ) {\n\t\t\t\t\t\t\treturn prefix + key;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.zipObject()\n\t\t\t\t\t\t.mapValues(function ( value, key ) {\n\t\t\t\t\t\t\tlet m = key.substr(prefix.length);\n\t\t\t\t\t\t\treturn ctrl['is' + _.capitalize(m)]();\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\tctrl.getClassObj = function ( ) {\n\t\t\t\t\treturn chain.value();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.viewChangeListeners = viewChangeListeners;\n\t\t\t\tctrl.modelChangeListeners = modelChangeListeners;\n\t\t\t\n\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\tconst capitalized = _.capitalize(type),\n\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\tpropertyName = '$' + type,\n\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\n\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\treturn models[method](function ( model ) {\n\t\t\t\t\t\t\treturn model[propertyName];\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(type !== 'valid' && type !== 'invalid') {\n\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmodels.forEach(function ( model ) {\n\t\t\t\t\t\t\t\tmodel['$' + setName].apply(model, outerArgs);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvalueScope[name] = getDefaultValue();\n\t\t\t\t\n\t\t\t\treturn ctrl;\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\r\n(function ( ) {\r\n\t\r\n\tangular.module('vorm')\r\n\t\t.factory('VormModelDelegate', [ function ( ) {\r\n\t\t\t\r\n\t\t\treturn function ( name ) {\r\n\t\t\t\t\r\n\t\t\t\tconst delegate = {};\r\n\t\t\t\tlet ngModel;\r\n\t\t\t\t\r\n\t\t\t\tdelegate.value = null;\r\n\t\t\t\t\r\n\t\t\t\tdelegate.getName = function ( ) {\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tdelegate.setNgModel = function ( ) {\r\n\t\t\t\t\tngModel = arguments[0];\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tdelegate.getNgModel = function ( ) {\r\n\t\t\t\t\treturn ngModel;\t\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tdelegate.clearViewValue = function ( ) {\r\n\t\t\t\t\tngModel.$setViewValue(null);\r\n\t\t\t\t\tngModel.$render();\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn delegate;\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t}]);\r\n\t\r\n})();\r\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormValueScope', [ '$rootScope', function ( $rootScope ) {\n\t\t\t\n\t\t\treturn function ( ) {\n\t\t\t\t\n\t\t\t\tconst scope = $rootScope.$new();\n\t\t\t\t\n\t\t\t\treturn scope;\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.constant('VormValueType',{\n\t\t\tSINGLE: 'single',\n\t\t\tLIST: 'list',\n\t\t\tNAMED: 'named'\n\t\t});\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('ngModel', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'ngModel', '^?vormField', '^?vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tlet [ ngModel, vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vormField || vorm) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!vormField) {\n\t\t\t\t\t\t\tvormField = new VormFieldCtrl(attrs.name || attrs.ngModel, element[0]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.addModel(ngModel);\n\t\t\t\t\t\t\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvormField.removeModel(ngModel);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormChange', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tlink: function ( scope, element, attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst cb = $parse(attrs.vormChange);\n\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( event, name ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$event: event,\n\t\t\t\t\t\t\t$name: event.detail ? event.detail.name : name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telement.bind('viewchange', handleChange);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormControl', [ '$document', function ( $document ) { \n\t\t\t\n\t\t\tlet matchesFuncName = (function ( ) {\n\t\t\t\t\n\t\t\t\tlet element = $document[0].createElement('div');\n\t\t\t\t\n\t\t\t\treturn _([ '', 'ms', 'moz', 'webkit'])\n\t\t\t\t\t.map(function ( prefix ) {\n\t\t\t\t\t\treturn (prefix ? (prefix + 'MatchesSelector') : 'matches');\n\t\t\t\t\t})\n\t\t\t\t\t.find(function ( name ) {\n\t\t\t\t\t\treturn name in element;\n\t\t\t\t\t});\n\t\t\t})();\n\t\t\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormControl', '^vormField', '^vormFieldConfig', '^vormFocusableList', '^vormFieldTemplate' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormFieldConfig,\n\t\t\t\t\t\tvormFocusableList,\n\t\t\t\t\t\tvormFieldTemplate,\n\t\t\t\t\t\tinputId = Math.random().toString(36).slice(2);\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\tvormFieldConfig = controllers[1];\n\t\t\t\t\t\tvormFocusableList = controllers[2];\n\t\t\t\t\t\tvormFieldTemplate = controllers[3];\n\t\t\t\t\t\t\n\t\t\t\t\t\tctrl.invokeData = vormFieldConfig.invokeData;\n\t\t\t\t\t\tctrl.getData = vormFieldConfig.getData;\n\t\t\t\t\t\tctrl.getConfig = vormFieldConfig.getConfig;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFocusableList.addId(inputId);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFieldTemplate.getModelCompiler()($scope, function ( clonedElement ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet focusable,\n\t\t\t\t\t\t\t\tselector = 'input,keygen,meter,output,progress,select,textarea',\n\t\t\t\t\t\t\t\treplace = $element.find('vorm-control-replace');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treplace.replaceWith(clonedElement);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclonedElement[0].className += ' ' + replace[0].className;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(clonedElement[0][matchesFuncName](selector)) {\n\t\t\t\t\t\t\t\tfocusable = clonedElement;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfocusable = angular.element(clonedElement[0].querySelector(selector));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfocusable.attr('id', ctrl.getInputId());\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$scope.$$postDigest(function ( ) {\n\t\t\t\t\t\t\t\t$scope.$eval($attrs.delegate).setNgModel(clonedElement.controller('ngModel'));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\t\treturn vormField && vormField.isRequired();\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputId = function ( ) {\n\t\t\t\t\t\treturn inputId;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(angular.version.minor >= 4) {\n\t\t\t\t\t\t// dynamic options throws an error in <=1.3.x\n\t\t\t\t\t\t// fixed in 1.4.x\n\t\t\t\t\t\t// https://github.com/angular/angular.js/pull/10639\n\t\t\t\t\t\tctrl.getOptions = function ( ) {\n\t\t\t\t\t\t\treturn ctrl.invokeData('options');\t\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctrl.getOptions = (function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet options;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn function ( ) {\n\t\t\t\t\t\t\t\tconst nwOpts = ctrl.invokeData('options');\n\t\t\t\t\t\t\t\tif(options !== nwOpts && !angular.equals(options,nwOpts)) {\n\t\t\t\t\t\t\t\t\toptions = nwOpts;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn options;\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$scope.$on('$destroy', function ( ) {\n\t\t\t\t\t\tvormFocusableList.removeId(inputId);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormControl',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\n\tangular.module('vorm')\n\t\t.directive('vormControlList', [  'VormModelDelegate', '$document', function ( VormModelDelegate, $document ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormControlList', '^vormFieldConfig', '^?vormFocusableList', '^vormField' ],\n\t\t\t\trestrict: 'E',\n\t\t\t\tcontroller: [ '$scope', function ( $scope ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tdelegates = [],\n\t\t\t\t\t\tlimit = NaN,\n\t\t\t\t\t\tvormFieldConfig,\n\t\t\t\t\t\tvormFocusableList,\n\t\t\t\t\t\tvormField;\n\t\t\t\t\t\t\n\t\t\t\t\tfunction triggerAsyncViewChange ( callback ) {\n\t\t\t\t\t\tlet unwatch = $scope.$watchCollection(vormField.getModels, function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvormField.triggerViewChange();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tunwatch();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction setFocus ( ) {\n\t\t\t\t\t\tif(vormFocusableList) {\n\t\t\t\t\t\t\tlet id = vormFocusableList.getId(),\n\t\t\t\t\t\t\t\tel = $document[0].getElementById(id);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(el) {\n\t\t\t\t\t\t\t\tel.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFieldConfig = controllers[0];\n\t\t\t\t\t\tvormFocusableList = controllers[1];\n\t\t\t\t\t\tvormField = controllers[2];\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.$watch(vormFieldConfig.getLimit, function ( limit ) {\n\t\t\t\t\t\t\tctrl.setLimit(limit);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tctrl.createDelegate();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getDelegates = function ( ) {\n\t\t\t\t\t\treturn delegates;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.createDelegate = function ( name ) {\n\t\t\t\t\t\tlet delegate;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!name) {\n\t\t\t\t\t\t\tname = delegates.length.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tdelegate = new VormModelDelegate(name);\n\t\t\t\t\t\tdelegates.push(delegate);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeDelegate = function ( delegate ) {\n\t\t\t\t\t\t_.pull(delegates, delegate);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.clearDelegate = function ( delegate ) {\n\t\t\t\t\t\tdelegate.clearViewValue();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLimit = function ( ) {\n\t\t\t\t\t\treturn limit;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.setLimit = function ( l ) {\n\t\t\t\t\t\tlimit = Number(l);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.reachedLimit = function ( ) {\n\t\t\t\t\t\treturn limit > 0 && delegates.length >= limit;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isClearButtonVisible = function ( ) {\n\t\t\t\t\t\treturn vormField.getValueType() === 'list';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.handleCreateClick = function ( ) {\n\t\t\t\t\t\tctrl.createDelegate();\n\t\t\t\t\t\ttriggerAsyncViewChange(setFocus);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.handleClearClick = function ( delegate ) {\n\t\t\t\t\t\tif(delegates.length === 1) {\n\t\t\t\t\t\t\tdelegate.clearViewValue();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctrl.removeDelegate(delegate);\n\t\t\t\t\t\t\ttriggerAsyncViewChange(setFocus);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormControlList',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormDelegateButton', [ function ( ) {\n\t\t\n\t\treturn {\n\t\t\trequire: [ 'vormDelegateButton', '^vormFieldConfig', '^vormControlList', '^vormField' ],\n\t\t\ttemplate: \n\t\t\t'<button class=\"vorm-delegate-button\" type=\"button\" ng-click=\"vormDelegateButton.handleClick()\" ng-disabled=\"vormDelegateButton.isDisabled()\" ng-show=\"vormDelegateButton.isVisible()\">' +\n\t\t\t\t'{{vormDelegateButton.getLabel()}}' + \n\t\t\t'</button>',\n\t\t\treplace: true,\n\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\n\t\t\t\tlet ctrl = this,\n\t\t\t\t\tvormFieldConfig,\n\t\t\t\t\tvormControlList,\n\t\t\t\t\tvormField;\n\t\t\t\t\n\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\tvormFieldConfig = controllers[0];\n\t\t\t\t\tvormControlList = controllers[1];\n\t\t\t\t\tvormField = controllers[2];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.handleClick = function ( ) {\n\t\t\t\t\tvormControlList.handleCreateClick();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isDisabled = function ( ) {\n\t\t\t\t\treturn vormControlList.reachedLimit();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isVisible = function ( ) {\n\t\t\t\t\treturn vormField.getValueType() === 'list';\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\tlet config = vormFieldConfig.getConfig(),\n\t\t\t\t\t\ttypeOptions = config ? config.valueType : null,\n\t\t\t\t\t\taddLabel = typeOptions && typeOptions.addLabel ? vormFieldConfig.invoke(typeOptions.addLabel) : '';\n\t\t\t\t\t\n\t\t\t\t\treturn addLabel;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t}],\n\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\n\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t\n\t\t\t},\n\t\t\tcontrollerAs: 'vormDelegateButton'\n\t\t};\n\t\t\n\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormField', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst name = $scope.$eval($attrs.vormField) || $attrs.name || $attrs.ngModel,\n\t\t\t\t\t\tctrl = this;\n\t\t\t\t\t\t\n\t\t\t\t\tangular.extend(ctrl, new VormFieldCtrl(name, $element[0]));\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tconst [ vorm ] = controllers;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\t\tvorm.addField(ctrl);\n\t\t\t\t\t\t\t$scope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tvorm.removeField(ctrl);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormField',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldConfig', [ 'vormInvoke', function ( vormInvoke ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormFieldConfig', 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tconfig = $scope.$eval($attrs.vormFieldConfig),\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormForm;\n\t\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\tvormForm = controllers[1];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setName(config.name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(config.valueType !== undefined) {\n\t\t\t\t\t\t\tif(typeof config.valueType === 'string') {\n\t\t\t\t\t\t\t\tvormField.setValueType(config.valueType);\n\t\t\t\t\t\t\t} else if(config.valueType.type !== undefined) {\n\t\t\t\t\t\t\t\tvormField.setValueType(config.valueType.type);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(_.isArray(config.required) || typeof config.required === 'function') {\n\t\t\t\t\t\t\t$scope.$watch(function ( ) {\n\t\t\t\t\t\t\t\t\treturn ctrl.invoke(config.required);\n\t\t\t\t\t\t\t\t}, function ( isRequired ) {\n\t\t\t\t\t\t\t\tvormField.setRequired(!!isRequired);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvormField.setRequired(config.required || false);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.invoke = function ( invokable ) {\n\t\t\t\t\t\tlet values;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormForm) {\n\t\t\t\t\t\t\tvalues = vormForm.getValues();\n\t\t\t\t\t\t} else if(vormField) {\n\t\t\t\t\t\t\tvalues = {};\n\t\t\t\t\t\t\tvalues[vormField.getName()] = vormField.getValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn vormInvoke(invokable, {\n\t\t\t\t\t\t\t$values: values\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getConfig = function ( ) {\n\t\t\t\t\t\treturn config;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.invokeData = function ( key ) {\n\t\t\t\t\t\treturn ctrl.invoke(config.data[key]);\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLimit = function ( ) {\n\t\t\t\t\t\tvar limit = 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormField.getValueType() === 'list') {\n\t\t\t\t\t\t\tlimit = -1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(config.valueType && config.valueType.limit !== undefined) {\n\t\t\t\t\t\t\t\tlimit = ctrl.invoke(config.valueType.limit);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn limit;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldConfig',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldTemplate', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\tlet wrapperEl = angular.element(vormTemplateService.getDefaultTemplate());\n\t\t\t\n\t\t\tangular.element(wrapperEl[0].querySelectorAll('vorm-replace')).replaceWith(vormTemplateService.getDefaultControlTemplate());\n\t\t\t\n\t\t\twrapperEl.attr('vorm-field-config', 'vormFieldTemplate.getConfig()');\n\t\t\twrapperEl.attr('vorm-focusable-list', '');\n\t\t\t\t\n\t\t\tconst template = wrapperEl[0].outerHTML;\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trestrict: 'E',\n\t\t\t\ttemplate: template,\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tconfig = $scope.$eval($attrs.config) || {},\n\t\t\t\t\t\tcompiler;\n\t\t\t\t\t\n\t\t\t\t\tconfig = _.defaults(angular.copy(config), { \n\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\ttype: $attrs.type,\n\t\t\t\t\t\tlabel: $attrs.label,\n\t\t\t\t\t\ttemplate: $scope.$eval($attrs.template),\n\t\t\t\t\t\trequired: $scope.$eval($attrs.required),\n\t\t\t\t\t\tdata: $scope.$eval($attrs.data) || {}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(!config.name || !config.type) {\n\t\t\t\t\t\tthrow new Error('Missing one of required arguments: name, type ');\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tcompiler = vormTemplateService.getModelCompiler(config.type, config.modelTemplate);\n\t\t\t\t\t\n\t\t\t\t\tctrl.getConfig = function ( ) {\n\t\t\t\t\t\treturn config;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getModelCompiler = function ( ) {\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldTemplate'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldWrapper', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\tlet wrapped = angular.element(vormTemplateService.getDefaultTemplate());\n\t\t\t\n\t\t\twrapped.find('vorm-replace').append('<ng-transclude></ng-transclude>');\n\t\t\twrapped.attr('vorm-field-config', 'vormFieldWrapper.getConfig()');\n\t\t\twrapped.attr('vorm-focusable-list', '');\n\t\t\t\n\t\t\tconst template = wrapped[0].outerHTML;\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\ttransclude: true,\n\t\t\t\ttemplate: template,\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$attrs', function ( $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\t\n\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\t\tlabel: $attrs.label\n\t\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getConfig = function ( ) {\n\t\t\t\t\t\treturn config;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldWrapper'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldset', [ 'vormInvoke', function ( vormInvoke ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormFieldset', '^?vormForm' ],\n\t\t\t\ttemplate: `\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<vorm-field-template config=\"field\" ng-repeat=\"field in vormFieldset.getFields() | filter:vormFieldset.isVisible:field\">\n\t\t\t\t\t\t</vorm-field-template>\n\t\t\t\t\t</fieldset>\n\t\t\t\t`,\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tvormForm,\n\t\t\t\t\t\tvalueScope;\n\t\t\t\t\t\n\t\t\t\t\tfunction getValues ( ) {\n\t\t\t\t\t\tlet vals = {};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormForm) {\n\t\t\t\t\t\t\tvals = vormForm.getValues();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn vals;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormForm = controllers[0];\n\t\t\t\t\t\tif(vormForm) {\n\t\t\t\t\t\t\tvalueScope = vormForm.getValueScope();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn $scope.$eval($attrs.fields);\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isVisible = function ( field ) {\n\t\t\t\t\t\treturn field.when === null || field.when === undefined ? true : !!vormInvoke.expr(field.when, { $values: getValues() }, valueScope);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldset',\n\t\t\t\tlink: function ( scope, element, attrs, controllers  ) {\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFocusableList', [ function ( ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tids = [];\n\t\t\t\t\t\n\t\t\t\t\tctrl.addId = function ( id ) {\n\t\t\t\t\t\tids.push(id);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeId = function ( id ) {\n\t\t\t\t\t\t_.pull(ids, id);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getId = function ( ) {\n\t\t\t\t\t\treturn ids[ids.length-1];\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}]\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormForm', [ 'VormValueScope', function ( VormValueScope ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'form' ],\n\t\t\t\tcontroller: [ '$element', function ( $element ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ctrl = this,\n\t\t\t\t\t\tfields = [],\n\t\t\t\t\t\tchangeListeners = [],\n\t\t\t\t\t\tsubmitListeners = [],\n\t\t\t\t\t\tvalueScope = new VormValueScope();\n\t\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( ) {\n\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(changeListeners, function ( listener ) {\n\t\t\t\t\t\t\tlistener.apply(ctrl, outerArgs);\t\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.addField = function ( field ) {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\tfield.viewChangeListeners.push(handleChange);\n\t\t\t\t\t\tfield.setValueScope(valueScope);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeField = function ( field ) {\n\t\t\t\t\t\t_.pull(fields, field);\n\t\t\t\t\t\t_.pull(field.viewChangeListeners, handleChange);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn fields;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValues = function ( ) {\n\t\t\t\t\t\tlet values = _(fields)\n\t\t\t\t\t\t\t.indexBy(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getName();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.mapValues(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getValue();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.value();\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn values;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValueScope = function ( ) {\n\t\t\t\t\t\treturn valueScope;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.changeListeners = changeListeners;\n\t\t\t\t\tctrl.submitListeners = submitListeners;\n\t\t\t\t\t\n\t\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\t\tconst capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\t\treturn fields[method](function ( field ) {\n\t\t\t\t\t\t\t\treturn field[getName]();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!(type === 'valid' || type === 'invalid')) {\n\t\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfields.forEach(function ( field ) {\n\t\t\t\t\t\t\t\t\tfield[setName].apply(field, outerArgs);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$element.bind('submit', function ( ) {\n\t\t\t\t\t\t_.invoke(submitListeners, 'call', null, ctrl.getValues());\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn ctrl;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormForm'\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('vormInvoke', [ '$injector', '$parse', function ( $injector, $parse ) {\n\t\t\t\n\t\t\tfunction invoke ( invokable, locals ) {\n\t\t\t\tlet value;\n\t\t\t\t\n\t\t\t\tif(!invokable) {\n\t\t\t\t\treturn invokable;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif((_.isArray(invokable) && typeof _.last(invokable) === 'function') || invokable.$inject !== undefined) {\n\t\t\t\t\tvalue = $injector.invoke(invokable, null, locals ? angular.copy(locals) : null);\n\t\t\t\t} else if(typeof invokable === 'function') {\n\t\t\t\t\tvalue = invokable();\n\t\t\t\t} else {\n\t\t\t\t\tvalue = invokable;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\t\n\t\t\tlet invoker = function ( invokable, locals ) {\n\t\t\t\treturn invoke(invokable,locals);\n\t\t\t};\n\t\t\t\n\t\t\tinvoker.expr = function ( invokable, locals, scope ) {\n\t\t\t\tlet value;\n\t\t\t\tif(typeof invokable === 'string') {\n\t\t\t\t\tvalue = $parse(invokable)(scope, locals);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = invoke(invokable, locals);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t};\n\t\t\t\n\t\t\treturn invoker;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormLabel', [ function ( ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormLabel', '^vormFieldConfig', '^vormFocusableList' ],\n\t\t\t\ttemplate: '<label class=\"vorm-field-label\">{{vormLabel.getLabel()}}</label>',\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$element', function ( $scope, $element ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tvormFieldConfig,\n\t\t\t\t\t\tvormFocusableList;\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormFieldConfig = controllers[0];\n\t\t\t\t\t\tvormFocusableList = controllers[1];\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.$watch(vormFocusableList.getId, function ( inputId ) {\n\t\t\t\t\t\t\t$element.attr('for', inputId);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\t\treturn vormFieldConfig.invoke(vormFieldConfig.getConfig().label);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormLabel',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormSubmit', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tconst [ vorm ] = controllers;\n\t\t\t\t\tlet cb;\n\t\t\t\t\t\n\t\t\t\t\tfunction handleSubmit ( ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$values: vorm.getValues()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormSubmit);\n\t\t\t\t\t\n\t\t\t\t\telement.bind('submit', handleSubmit);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.provider('vormTemplateService', [ function ( ) {\n\t\t\t\n\t\t\tlet wrapperTemplate,\n\t\t\t\tcontrolTemplate,\n\t\t\t\tmodelCompilers,\n\t\t\t\tmodelTemplates = {};\n\t\t\t\t\n\t\t\tconst vormTemplateService = {};\n\t\t\t\n\t\t\twrapperTemplate = '' + \n\t\t\t\t'<div ng-class=\"vormField.getClassObj()\">' + \n\t\t\t\t\t'<vorm-label></vorm-label>' + \n\t\t\t\t\t'<vorm-replace></vorm-replace>' +\n\t\t\t\t'</div>';\n\t\t\t\t\n\t\t\tcontrolTemplate = \n\t\t\t\t'<vorm-control-list>' + \n\t\t\t\t\t'<vorm-control ng-repeat=\"delegate in vormControlList.getDelegates()\" delegate=\"delegate\">' + \n\t\t\t\t\t\t'<vorm-control-replace></vorm-control-replace>' + \n\t\t\t\t\t\t'<button class=\"vorm-control-clear-button\" type=\"button\" ng-click=\"vormControlList.handleClearClick(delegate)\" ng-show=\"vormControlList.isClearButtonVisible()\">x</button>' + \n\t\t\t\t\t'</vorm-control>' + \n\t\t\t\t\t'<vorm-delegate-button>' + \n\t\t\t\t\t'</vorm-delegate-button>' +\n\t\t\t\t'</vorm-control-list>';\n\t\t\t\t\n\t\t\tmodelTemplates = _.mapValues(modelTemplates, function ( template ) {\n\t\t\t\treturn angular.element(template);\n\t\t\t});\t\n\t\t\t\n\t\t\tfunction modifyModelTemplates ( processor ) {\n\t\t\t\tmodelTemplates = _.mapValues(modelTemplates, function ( template, type ) {\n\t\t\t\t\treturn processor(template, type);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tfunction modifyTemplate ( processor ) {\n\t\t\t\tconst processedEl = processor(angular.element(wrapperTemplate));\n\t\t\t\tprocessedEl.attr('vorm-field', '');\n\t\t\t\t\n\t\t\t\tprocessedEl.find('vorm-control').attr('limit', 'vormFieldConfig.getLimit()');\n\t\t\t\t\n\t\t\t\twrapperTemplate = processedEl[0].outerHTML;\n\t\t\t}\n\t\t\t\n\t\t\tfunction modifyControlTemplate ( processor ) {\n\t\t\t\tconst wrapper = angular.element('<p></p>');\n\t\t\t\twrapper.append(processor(angular.element(controlTemplate)));\n\t\t\t\tcontrolTemplate = wrapper[0].innerHTML;\n\t\t\t}\n\t\t\t\n\t\t\tfunction registerType ( type, template ) {\n\t\t\t\tmodelTemplates[type] = template;\n\t\t\t}\n\t\t\t\n\t\t\tmodifyTemplate(function ( ) {\n\t\t\t\treturn angular.element(wrapperTemplate);\t\n\t\t\t});\n\t\t\t\n\t\t\tmodifyControlTemplate(function ( ) {\n\t\t\t\treturn angular.element(controlTemplate);\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\t$get: [ '$compile', function ( $compile ) {\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultTemplate = function ( ) {\n\t\t\t\t\t\treturn wrapperTemplate;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultControlTemplate = function ( ) {\n\t\t\t\t\t\treturn controlTemplate;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getModelCompiler = function ( type, template ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet compiler;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(template) {\n\t\t\t\t\t\t\tcompiler = $compile(template);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcompiler = modelCompilers[type];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!compiler) {\n\t\t\t\t\t\t\tthrow new Error(`Model template for ${type} not found`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tmodelCompilers = _.mapValues(modelTemplates, function ( el ) {\n\t\t\t\t\t\tlet modelEl;\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.some(el, function ( element ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet childEl;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(element.hasAttribute('ng-model')) {\n\t\t\t\t\t\t\t\tmodelEl = angular.element(element);\n\t\t\t\t\t\t\t} else if((childEl = element.querySelector('[ng-model]'))) {\n\t\t\t\t\t\t\t\tmodelEl = angular.element(childEl);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn !!modelEl;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(!modelEl) {\n\t\t\t\t\t\t\tmodelEl = el;\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\tmodelEl.attr('ng-model', 'delegate.value');\n\t\t\t\t\t\tmodelEl.attr('ng-required', 'vormControl.isRequired()');\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn $compile(el);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn vormTemplateService;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tmodifyModelTemplates: modifyModelTemplates,\n\t\t\t\tmodifyControlTemplate: modifyControlTemplate,\n\t\t\t\tmodifyTemplate: modifyTemplate,\n\t\t\t\tregisterType: registerType\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.config([ 'vormTemplateServiceProvider', function ( vormTemplateServiceProvider ) {\n\t\t\t\n\t\t\tconst templates = \n\t\t\t\t_('date datetime datetime-local email month number password search tel text time url week checkbox'.split(' '))\n\t\t\t\t\t.zipObject()\n\t\t\t\t\t.mapValues(function ( value, key ) {\n\t\t\t\t\t\tvar placeholder = _.includes('text search tel url email number password'.split(' '), key) ?\n\t\t\t\t\t\t\t`placeholder=\"{{vormControl.invokeData('placeholder')}}\"`\n\t\t\t\t\t\t\t: '';\n\t\t\t\t\t\treturn `<input type=\"${key}\" ${placeholder}/>`;\n\t\t\t\t\t})\n\t\t\t\t\t.value();\n\t\t\t\t\t\n\t\t\tfor(let type in templates) {\n\t\t\t\tvormTemplateServiceProvider.registerType(type, angular.element(templates[type]));\n\t\t\t}\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.config([ 'vormTemplateServiceProvider', function ( vormTemplateServiceProvider ) {\n\t\t\t\n\t\t\tconst el = angular.element(\n\t\t\t\t'<div class=\"vorm-radio-group\">' + \n\t\t\t\t\t'<label ng-repeat=\"option in vormControl.getOptions()\">' +\n\t\t\t\t\t\t'<input type=\"radio\" ng-model name=\"{{::vormField.getName()}}\" value=\"{{::option.value}}\"/>' + \n\t\t\t\t\t\t'{{::option.label}}' + \n\t\t\t\t\t'</label>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t\t\n\t\t\tvormTemplateServiceProvider.registerType('radio', el);\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.config([ 'vormTemplateServiceProvider', function ( vormTemplateServiceProvider ) {\n\t\t\t\n\t\t\tconst el = angular.element(`<select ng-options=\"option.value as option.label for option in vormControl.getOptions()\"><option value=\"\" ng-show=\"!!vormControl.invokeData('notSelectedLabel')\">{{vormControl.invokeData('notSelectedLabel')}}</option></select>`);\n\t\t\t\n\t\t\tvormTemplateServiceProvider.registerType('select', el);\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.config([ 'vormTemplateServiceProvider', function ( vormTemplateServiceProvider ) {\n\t\t\t\n\t\t\tconst el = angular.element(`<textarea placeholder=\"{{vormControl.invokeData('placeholder')}}\"></textarea>`);\n\t\t\t\n\t\t\tvormTemplateServiceProvider.registerType('textarea', el);\n\t\t\t\n\t\t}]);\n\t\n})();\n"],"sourceRoot":"/source/"}