{"version":3,"sources":["_.js","VormEvent.js","VormFieldCtrl.js","VormModelDelegate.js","VormModelListCtrl.js","VormValueType.js","ngModel.js","vormChange.js","vormField.js","vormFieldTemplate.js","vormFieldWrapper.js","vormFieldset.js","vormForm.js","vormInput.js","vormInvoke.js","vormLabel.js","vormModelList.js","vormSubmit.js","vormTemplateService.js"],"names":["angular","module","factory","$document","$window","VormEvent","undefined","CustomEvent","type","data","detail","bubbles","error","event","createEvent","initCustomEvent","VormValueType","name","element","setModelValue","model","value","$viewChangeListeners","$modelValue","$$writeModelToScope","listeners","handleViewChange","dispatchEvent","_","invoke","viewChangeListeners","handleFormatterCall","modelChangeListeners","ctrl","models","prefix","valueType","SINGLE","required","getName","setName","arguments","addModel","push","$formatters","removeModel","pull","getModels","getValue","LIST","pluck","NAMED","each","$name","getValueType","setValueType","indexOf","Error","setValue","index","modelsToChange","concat","val","key","find","isRequired","setRequired","isEmpty","every","$isEmpty","chain","split","map","zipObject","mapValues","m","substr","length","capitalize","getClassObj","forEach","capitalized","propertyName","method","outerArgs","apply","delegate","ngModel","setNgModel","getNgModel","clearValue","$setViewValue","$render","VormModelDelegate","this","delegates","getDelegates","clearDelegate","addDelegate","toString","constant","directive","VormFieldCtrl","require","link","scope","attrs","controllers","_controllers","babelHelpers","slicedToArray","vormField","vorm","addField","$on","removeField","$parse","handleChange","cb","$event","vormChange","bind","controller","$scope","$element","$attrs","$eval","extend","controllerAs","vormTemplateService","VormModelListCtrl","vormInvoke","wrapperEl","getDefaultTemplate","templateEl","getDefaultControlTemplate","querySelectorAll","append","template","outerHTML","restrict","replace","vormModelList","inputs","config","compiler","vormForm","defaults","copy","label","getModelCompiler","modelTemplate","limit","getLabel","getInputData","getInvokedData","values","getValues","$values","addInput","input","removeInput","getInputs","getLastInputId","inputId","last","getInputId","slice","wrapped","transclude","fields","getFields","recalc","indexBy","field","Object","freeze","changeListeners","listener","handleModelChange","submitListeners","toUpperCase","vormFieldTemplate","Math","random","getData","getOptions","version","minor","options","nwOpts","equals","clonedElement","replaceWith","$$postDigest","$injector","invokable","locals","isArray","$inject","filter","identity","handleSubmit","vormSubmit","provider","modifyModelTemplates","processor","modelTemplates","modifyTemplate","processedEl","wrapperTemplate","attr","controlTemplate","modelCompilers","assign","placeholder","includes","select","$get","$compile","el","modelEl","some","childEl","hasAttribute","querySelector"],"mappings":"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","file":"vorm.js","sourcesContent":["/*global require*/\n(function ( ) {\n\t\n\tangular.module('vorm', []);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormEvent', [ '$document', '$window', function ( $document, $window ) {\n\t\t\t\n\t\t\tlet VormEvent;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst event = new $window.CustomEvent('foo'); // jshint ignore:line\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\treturn new $window.CustomEvent(type, {\n\t\t\t\t\t\tdetail: data,\n\t\t\t\t\t\tbubbles: true\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t} catch ( error ) {\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\tconst event = $document[0].createEvent('CustomEvent');\n\t\t\t\t\tevent.initCustomEvent(type, true, true, data);\n\t\t\t\t\treturn event;\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\treturn VormEvent;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormFieldCtrl', [ 'VormEvent', 'VormValueType', function ( VormEvent, VormValueType ) {\n\t\t\t\n\t\t\treturn function ( name, element ) {\n\t\t\t\t\n\t\t\t\tconst ctrl = {},\n\t\t\t\t\tmodels = [],\n\t\t\t\t\tviewChangeListeners = [],\n\t\t\t\t\tmodelChangeListeners = [],\n\t\t\t\t\tprefix = 'vorm-field-';\n\t\t\t\t\n\t\t\t\tlet valueType = VormValueType.SINGLE,\n\t\t\t\t\trequired;\n\t\t\t\t\n\t\t\t\tfunction setModelValue ( model, value ) {\n\t\t\t\t\t// $$writeModelToScope calls the view listeners\n\t\t\t\t\t// and we don't really want that\n\t\t\t\t\tconst { $viewChangeListeners, $modelValue } = model;\n\t\t\t\t\t\t\n\t\t\t\t\tmodel.$viewChangeListeners = [];\n\t\t\t\t\tmodel.$modelValue = value;\n\t\t\t\t\tmodel.$$writeModelToScope();\n\t\t\t\t\t\n\t\t\t\t\t// reset all the things\n\t\t\t\t\tmodel.listeners = $viewChangeListeners;\n\t\t\t\t\tmodel.$modelValue = $modelValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleViewChange ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('viewchange', { name: name } ));\n\t\t\t\t\t_.invoke(viewChangeListeners, 'call', null, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleFormatterCall ( ) {\n\t\t\t\t\t// now we know the model has changed\n\t\t\t\t\telement.dispatchEvent(new VormEvent('modelchange', { name: name } ));\n\t\t\t\t\t_.invoke(modelChangeListeners, 'call', null, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tctrl.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setName = function ( ) {\n\t\t\t\t\tname = arguments[0];\n\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\tctrl.addModel = function ( model ) {\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tmodel.$viewChangeListeners.push(handleViewChange);\n\t\t\t\t\tmodel.$formatters.push(handleFormatterCall);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.removeModel = function ( model ) {\n\t\t\t\t\t_.pull(models, model);\n\t\t\t\t\t_.pull(model.$viewChangeListeners, handleViewChange);\n\t\t\t\t\t_.pull(model.$formatters, handleFormatterCall);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getModels = function ( ) {\n\t\t\t\t\treturn models;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValue = function ( ) {\n\t\t\t\t\tlet value;\n\t\t\t\t\t\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tvalue = models[0] ? models[0].$modelValue : undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tvalue = _.pluck(models, '$modelValue');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t\t_.each(models, function ( model) {\n\t\t\t\t\t\t\tvalue[model.$name] = model.$modelValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn value;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValueType = function ( ) {\n\t\t\t\t\treturn valueType;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueType = function ( type ) {\n\t\t\t\t\tif([ VormValueType.SINGLE, VormValueType.LIST, VormValueType.NAMED ].indexOf(type) === -1) {\n\t\t\t\t\t\tthrow new Error('Unsupported VormValueType: ' + VormValueType);\n\t\t\t\t\t}\n\t\t\t\t\tvalueType = type;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValue = function ( value ) {\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tif(models[0]) {\n\t\t\t\t\t\t\tsetModelValue(models[0], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\t_.each(models, function ( model, index ) {\n\t\t\t\t\t\t\tsetModelValue(model, value[index]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tconst modelsToChange = models.concat();\n\t\t\t\t\t\t_.each(value, function ( val, key ) {\n\t\t\t\t\t\t\tvar model = _.find(models, { $name: key });\n\t\t\t\t\t\t\tif(model) {\n\t\t\t\t\t\t\t\tsetModelValue(model, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_.pull(modelsToChange, model);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(modelsToChange, function ( model ) {\n\t\t\t\t\t\t\tsetModelValue(model, undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\treturn required;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setRequired = function ( ) {\n\t\t\t\t\trequired = !!arguments[0];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isEmpty = function ( ) {\n\t\t\t\t\treturn models.every(function ( model ) {\n\t\t\t\t\t\treturn model.$isEmpty();\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet chain = _('valid invalid dirty pristine touched untouched required empty'.split(' '))\n\t\t\t\t\t\t.map(function ( key ) {\n\t\t\t\t\t\t\treturn prefix + key;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.zipObject()\n\t\t\t\t\t\t.mapValues(function ( value, key ) {\n\t\t\t\t\t\t\tlet m = key.substr(prefix.length);\n\t\t\t\t\t\t\treturn ctrl['is' + _.capitalize(m)]();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.each(function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\tctrl.getClassObj = function ( ) {\n\t\t\t\t\treturn chain.value();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.viewChangeListeners = viewChangeListeners;\n\t\t\t\tctrl.modelChangeListeners = modelChangeListeners;\n\t\t\t\n\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\tconst capitalized = _.capitalize(type),\n\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\tpropertyName = '$' + type,\n\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\n\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\treturn models[method](function ( model ) {\n\t\t\t\t\t\t\treturn model[propertyName];\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(type !== 'valid' && type !== 'invalid') {\n\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmodels.forEach(function ( model ) {\n\t\t\t\t\t\t\t\tmodel['$' + setName].apply(model, outerArgs);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn ctrl;\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormModelDelegate', [ function ( ) {\n\t\t\t\n\t\t\treturn function ( name ) {\n\t\t\t\t\n\t\t\t\tconst delegate = {};\n\t\t\t\tlet ngModel;\n\t\t\t\t\n\t\t\t\tdelegate.value = undefined;\n\t\t\t\t\n\t\t\t\tdelegate.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.setNgModel = function ( ) {\n\t\t\t\t\tngModel = arguments[0];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.getNgModel = function ( ) {\n\t\t\t\t\treturn ngModel;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.clearValue = function ( ) {\n\t\t\t\t\tngModel.$setViewValue(undefined);\n\t\t\t\t\tngModel.$render();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\treturn delegate;\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormModelListCtrl', [ 'VormModelDelegate', function ( VormModelDelegate) {\n\t\t\t\n\t\t\treturn function ( ) {\n\t\t\t\t\n\t\t\t\tconst ctrl = this,\n\t\t\t\t\tdelegates = [];\n\t\t\t\t\t\n\t\t\t\tctrl.getDelegates = function ( ) {\n\t\t\t\t\treturn delegates;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.clearDelegate = function ( delegate ) {\n\t\t\t\t\tif(delegates.length === 1) {\n\t\t\t\t\t\tdelegate.clearValue();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_.pull(delegates, delegate);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.addDelegate = function ( name ) {\n\t\t\t\t\tlet delegate;\n\t\t\t\t\t\n\t\t\t\t\tif(!name) {\n\t\t\t\t\t\tname = delegates.length.toString();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdelegate = new VormModelDelegate(name);\n\t\t\t\t\tdelegates.push(delegate);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.constant('VormValueType',{\n\t\t\tSINGLE: 'single',\n\t\t\tLIST: 'list',\n\t\t\tNAMED: 'named'\n\t\t});\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('ngModel', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'ngModel', '^?vormField', '^?vormForm', '^?vormInput' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tlet [ ngModel, vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vormField || vorm) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!vormField) {\n\t\t\t\t\t\t\tvormField = new VormFieldCtrl(attrs.ngModel, element[0]);\n\t\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.addModel(ngModel);\n\t\t\t\t\t\t\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvormField.removeModel(ngModel);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormChange', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tlink: function ( scope, element, attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst cb = $parse(attrs.vormChange);\n\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( event, name ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$event: event,\n\t\t\t\t\t\t\t$name: event.detail ? event.detail.name : name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telement.bind('viewchange', handleChange);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormField', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst name = $scope.$eval($attrs.vormField) || $attrs.ngModel,\n\t\t\t\t\t\tctrl = this;\n\t\t\t\t\t\n\t\t\t\t\tangular.extend(ctrl, new VormFieldCtrl(name, $element[0]));\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormField',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tconst [ vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldTemplate', [ 'vormTemplateService', 'VormValueType', 'VormModelListCtrl', 'vormInvoke', function ( vormTemplateService, VormValueType, VormModelListCtrl, vormInvoke ) {\n\t\t\t\n\t\t\tlet wrapperEl = angular.element(vormTemplateService.getDefaultTemplate()),\n\t\t\t\ttemplateEl = angular.element(vormTemplateService.getDefaultControlTemplate());\n\t\t\t\n\t\t\tangular.element(wrapperEl[0].querySelectorAll('vorm-control')).append(templateEl);\n\t\t\t\n\t\t\tconst template = wrapperEl[0].outerHTML;\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormFieldTemplate', 'vormField', '^?vormForm' ],\n\t\t\t\ttemplate: template,\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ctrl = this,\n\t\t\t\t\t\tvormModelList = new VormModelListCtrl(),\n\t\t\t\t\t\tinputs = [];\n\n\t\t\t\t\tlet config = $scope.$eval($attrs.config) || {},\n\t\t\t\t\t\tcompiler,\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormForm;\n\t\t\t\t\t\n\t\t\t\t\tconfig = _.defaults(angular.copy(config), { \n\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\ttype: $attrs.type,\n\t\t\t\t\t\tlabel: $attrs.label,\n\t\t\t\t\t\ttemplate: $scope.$eval($attrs.template),\n\t\t\t\t\t\trequired: $scope.$eval($attrs.required),\n\t\t\t\t\t\tdata: $scope.$eval($attrs.data) || {}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(!config.name || !config.type) {\n\t\t\t\t\t\tthrow new Error('Missing one of required arguments: name, type ');\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tcompiler = vormTemplateService.getModelCompiler(config.type, config.modelTemplate);\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\tvormForm = controllers[1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setName(config.name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(config.limit > 1) {\n\t\t\t\t\t\t\tvormField.setValueType(VormValueType.LIST);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setRequired(config.required || false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormModelList.addDelegate();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\t\treturn config.label;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getModelCompiler = function ( ) {\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputData = function ( ) {\n\t\t\t\t\t\treturn config.data;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInvokedData = function ( key ) {\n\t\t\t\t\t\tlet values;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormForm) {\n\t\t\t\t\t\t\tvalues = vormForm.getValues();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalues = {};\n\t\t\t\t\t\t\tvalues[vormField.getName()] = vormField.getValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn vormInvoke(ctrl.getInputData()[key], {\n\t\t\t\t\t\t\t$values: values\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.addInput = function ( input ) {\n\t\t\t\t\t\tinputs.push(input);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeInput = function ( input ) {\n\t\t\t\t\t\t_.pull(inputs, input);\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputs = function ( ) {\n\t\t\t\t\t\treturn inputs;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLastInputId = function ( ) {\n\t\t\t\t\t\tvar input = _.last(inputs),\n\t\t\t\t\t\t\tinputId;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(input) {\n\t\t\t\t\t\t\tinputId = input.getInputId();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn inputId;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getDelegates = vormModelList.getDelegates;\n\t\t\t\t\tctrl.addDelegate = vormModelList.addDelegate;\n\t\t\t\t\tctrl.clearDelegate = vormModelList.clearDelegate;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldTemplate',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldWrapper', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\tlet wrapped = angular.element(vormTemplateService.getDefaultTemplate());\n\t\t\t\n\t\t\twrapped.find('vorm-control').append('<ng-transclude></ng-transclude>');\n\t\t\t\n\t\t\tconst template = wrapped[0].outerHTML;\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\ttransclude: true,\n\t\t\t\ttemplate: template,\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$attrs', function ( $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this;\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\t\treturn $attrs.label;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}]\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldset', [ function ( ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\ttemplate: `\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<vorm-field-template config=\"field\" ng-repeat=\"field in vormFieldset.getFields()\">\n\t\t\t\t\t\t</vorm-field-template>\n\t\t\t\t\t</fieldset>\n\t\t\t\t`,\n\t\t\t\tscope: {\n\t\t\t\t\tfields: '&'\n\t\t\t\t},\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', function ( $scope ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this;\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = $scope.fields;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldset'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormForm', [ function ( ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'form' ],\n\t\t\t\tcontroller: [ '$element', function ( $element ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ctrl = this,\n\t\t\t\t\t\tfields = [],\n\t\t\t\t\t\tchangeListeners = [],\n\t\t\t\t\t\tsubmitListeners = [];\n\t\t\t\t\t\n\t\t\t\t\tlet values = {};\n\t\t\t\t\t\t\n\t\t\t\t\tfunction recalc ( ) {\n\t\t\t\t\t\tvalues = _(fields)\n\t\t\t\t\t\t\t.indexBy(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getName();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.mapValues(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getValue();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.value();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tObject.freeze(values);\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( ) {\n\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(changeListeners, function ( listener ) {\n\t\t\t\t\t\t\tlistener.apply(ctrl, outerArgs);\t\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction handleModelChange ( ) {\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.addField = function ( field ) {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\tfield.viewChangeListeners.push(handleChange);\n\t\t\t\t\t\tfield.modelChangeListeners.push(handleModelChange);\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeField = function ( field ) {\n\t\t\t\t\t\t_.pull(fields, field);\n\t\t\t\t\t\t_.pull(field.viewChangeListeners, handleChange);\n\t\t\t\t\t\t_.pull(field.modelChangeListeners, handleModelChange);\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn fields;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValues = function ( ) {\n\t\t\t\t\t\treturn values;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.changeListeners = changeListeners;\n\t\t\t\t\tctrl.submitListeners = submitListeners;\n\t\t\t\t\t\n\t\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\t\tconst capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\t\treturn fields[method](function ( field ) {\n\t\t\t\t\t\t\t\treturn field[getName]();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!(type === 'valid' || type === 'invalid')) {\n\t\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfields.forEach(function ( field ) {\n\t\t\t\t\t\t\t\t\tfield[setName].apply(field, outerArgs);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$element.bind('submit', function ( ) {\n\t\t\t\t\t\t_.invoke(submitListeners, 'call', null, values);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn ctrl;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormForm'\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormInput', [ function ( ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormInput', '^vormField', '^vormFieldTemplate' ],\n\t\t\t\tcontroller: [ '$scope', function ( $scope ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormFieldTemplate,\n\t\t\t\t\t\tinputId = Math.random().toString(36).slice(2);\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\tvormFieldTemplate = controllers[1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tctrl.getInvokedData = vormFieldTemplate.getInvokedData;\n\t\t\t\t\t\tctrl.getData = vormFieldTemplate.getInputData;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFieldTemplate.addInput(ctrl);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\t\treturn vormField && vormField.isRequired();\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputId = function ( ) {\n\t\t\t\t\t\treturn inputId;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(angular.version.minor >= 4) {\n\t\t\t\t\t\t// dynamic options throws an error in <=1.3.x\n\t\t\t\t\t\t// fixed in 1.4.x\n\t\t\t\t\t\t// https://github.com/angular/angular.js/pull/10639\n\t\t\t\t\t\tctrl.getOptions = function ( ) {\n\t\t\t\t\t\t\treturn ctrl.getInvokedData('options');\t\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctrl.getOptions = (function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet options;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn function ( ) {\n\t\t\t\t\t\t\t\tconst nwOpts = ctrl.getInvokedData('options');\n\t\t\t\t\t\t\t\tif(options !== nwOpts && !angular.equals(options,nwOpts)) {\n\t\t\t\t\t\t\t\t\toptions = nwOpts;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn options;\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$scope.$on('$destroy', function ( ) {\n\t\t\t\t\t\tvormFieldTemplate.removeInput(ctrl);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormInput',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t\t\n\t\t\t\t\tscope.$eval(attrs.compiler)(scope, function ( clonedElement ) {\n\t\t\t\t\t\telement.replaceWith(clonedElement);\n\t\t\t\t\t\t\n\t\t\t\t\t\tscope.$$postDigest(function ( ) {\n\t\t\t\t\t\t\tscope.$eval(attrs.delegate).setNgModel(clonedElement.controller('ngModel'));\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('vormInvoke', [ '$injector', function ( $injector ) {\n\t\t\t\n\t\t\treturn function ( invokable, locals ) {\n\t\t\t\t\n\t\t\t\tvar value;\n\t\t\t\t\n\t\t\t\tif(!invokable) {\n\t\t\t\t\treturn invokable;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif((_.isArray(invokable) && typeof _.last(invokable) === 'function') || invokable.$inject !== undefined) {\n\t\t\t\t\tvalue = $injector.invoke(invokable, null, angular.copy(locals));\n\t\t\t\t} else if(typeof invokable === 'function') {\n\t\t\t\t\tvalue = invokable();\n\t\t\t\t} else {\n\t\t\t\t\tvalue = invokable;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormLabel', [ function ( ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormLabel', '^?vormFieldTemplate', '^?vormFieldWrapper' ],\n\t\t\t\ttemplate: '<label>{{vormLabel.getLabel()}}</label>',\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this;\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tctrl.getLabel = _(controllers)\n\t\t\t\t\t\t\t.filter(_.identity)\n\t\t\t\t\t\t\t.pluck('getLabel')\n\t\t\t\t\t\t\t.value()[0];\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormLabel',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormModelList', [ 'VormModelListCtrl', function ( VormModelListCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\t\n\t\t\t\t\tVormModelListCtrl.apply(this, null);\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormModelList'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormSubmit', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tconst [ vorm ] = controllers;\n\t\t\t\t\tlet cb;\n\t\t\t\t\t\n\t\t\t\t\tfunction handleSubmit ( ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$values: vorm.getValues()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormSubmit);\n\t\t\t\t\t\n\t\t\t\t\telement.bind('submit', handleSubmit);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.provider('vormTemplateService', [ function ( ) {\n\t\t\t\n\t\t\tlet wrapperTemplate,\n\t\t\t\tcontrolTemplate,\n\t\t\t\tmodelCompilers,\n\t\t\t\tmodelTemplates = {};\n\t\t\t\t\n\t\t\tconst vormTemplateService = {};\n\t\t\t\n\t\t\twrapperTemplate = '' + \n\t\t\t\t'<div ng-class=\"vormField.getClassObj()\">' + \n\t\t\t\t\t'<vorm-label></vorm-label>' + \n\t\t\t\t\t'<vorm-control></vorm-control>' +\n\t\t\t\t'</div>';\n\t\t\t\t\n\t\t\tcontrolTemplate = '<div class=\"vorm-control-list\">' +\n\t\t\t\t'<div class=\"vorm-control-list-item\" ng-repeat=\"delegate in vormFieldTemplate.getDelegates()\">' + \n\t\t\t\t\t'<vorm-input delegate=\"delegate\" compiler=\"vormFieldTemplate.getModelCompiler()\" data=\"vormFieldTemplate.getInputData()\"></vorm-input>' +\n\t\t\t\t\t'<button type=\"button\" ng-click=\"vormFieldTemplate.clearDelegate(delegate)\" ng-show=\"vormField.getValueType()===\\'multiple\\'\">x</button>' + \n\t\t\t\t'</div>' + \n\t\t\t'</div>';\n\t\t\t\t\n\t\t\tmodelTemplates = _(modelTemplates)\n\t\t\t\t.assign(\n\t\t\t\t\t_('date datetime datetime-local email month number password search tel text time url week checkbox'.split(' '))\n\t\t\t\t\t\t.zipObject()\n\t\t\t\t\t\t.mapValues(function ( value, key ) {\n\t\t\t\t\t\t\tvar placeholder = _.includes('text search tel url email number password'.split(' '), key) ?\n\t\t\t\t\t\t\t\t`placeholder=\"{{vormInput.invoke('placeholder')}}\"`\n\t\t\t\t\t\t\t\t: '';\n\t\t\t\t\t\t\treturn `<input type=\"${key}\" id=\"{{::vormInput.getInputId()}}\" ${placeholder}/>`;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.value()\n\t\t\t\t)\n\t\t\t\t.value();\n\t\t\t\t\n\t\t\tmodelTemplates.select = `<select id=\"{{::vormInput.getInputId()}}\" ng-options=\"option.value as option.label for option in vormInput.getOptions()\"><option value=\"\" data-ng-show=\"vormInput.getInvokedData('notSelectedLabel')\">{{vormInput.getInvokedData('notSelectedLabel')}}</option></select>`;\n\t\t\t\n\t\t\tmodelTemplates = _.mapValues(modelTemplates, function ( template ) {\n\t\t\t\treturn angular.element(template);\n\t\t\t});\t\n\t\t\t\n\t\t\tfunction modifyModelTemplates ( processor ) {\n\t\t\t\tmodelTemplates = _.mapValues(modelTemplates, function ( template, type ) {\n\t\t\t\t\treturn processor(template, type);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tfunction modifyTemplate ( processor ) {\n\t\t\t\tconst processedEl = processor(angular.element(wrapperTemplate));\n\t\t\t\tprocessedEl.attr('vorm-field', '');\n\t\t\t\twrapperTemplate = processedEl[0].outerHTML;\n\t\t\t}\n\t\t\t\n\t\t\tmodifyTemplate(function ( ) {\n\t\t\t\treturn angular.element(wrapperTemplate);\t\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\t$get: [ '$compile', function ( $compile ) {\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultTemplate = function ( ) {\n\t\t\t\t\t\treturn wrapperTemplate;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultControlTemplate = function ( ) {\n\t\t\t\t\t\treturn controlTemplate;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getModelCompiler = function ( type, template ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet compiler;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(template) {\n\t\t\t\t\t\t\tcompiler = $compile(template);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcompiler = modelCompilers[type];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!compiler) {\n\t\t\t\t\t\t\tthrow new Error(`Model template for ${type} not found`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tmodelCompilers = _.mapValues(modelTemplates, function ( el ) {\n\t\t\t\t\t\tlet modelEl;\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.some(el, function ( element ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet childEl;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(element.hasAttribute('ng-model')) {\n\t\t\t\t\t\t\t\tmodelEl = angular.element(element);\n\t\t\t\t\t\t\t} else if((childEl = element.querySelector('[ng-model]'))) {\n\t\t\t\t\t\t\t\tmodelEl = angular.element(childEl);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn !!modelEl;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(!modelEl) {\n\t\t\t\t\t\t\tmodelEl = el;\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\tmodelEl.attr('ng-model', 'model.value');\n\t\t\t\t\t\tmodelEl.attr('ng-required', 'vormInput.isRequired()');\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn $compile(el);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn vormTemplateService;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tmodifyModelTemplates: modifyModelTemplates,\n\t\t\t\tmodifyTemplate: modifyTemplate\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n"],"sourceRoot":"/source/"}