{"version":3,"sources":["_.js","ModelDelegate.js","VormEvent.js","VormFieldCtrl.js","VormModelListCtrl.js","VormValueType.js","ngModel.js","vormChange.js","vormField.js","vormFieldTemplate.js","vormFieldWrapper.js","vormFieldset.js","vormForm.js","vormInput.js","vormInvoke.js","vormModelList.js","vormSubmit.js","vormTemplateService.js","VormModelDelegate.js"],"names":["angular","module","factory","name","delegate","ngModel","undefined","value","getName","setNgModel","arguments","getNgModel","clearValue","$setViewValue","$render","$document","$window","VormEvent","CustomEvent","type","data","detail","bubbles","error","event","createEvent","initCustomEvent","VormValueType","element","setModelValue","model","$viewChangeListeners","$modelValue","$$writeModelToScope","listeners","handleViewChange","dispatchEvent","_","invoke","viewChangeListeners","handleFormatterCall","modelChangeListeners","ctrl","models","prefix","valueType","SINGLE","required","setName","addModel","push","$formatters","removeModel","pull","getModels","getValue","LIST","pluck","NAMED","each","$name","getValueType","setValueType","indexOf","Error","setValue","index","modelsToChange","concat","val","key","find","isRequired","setRequired","isEmpty","every","$isEmpty","chain","split","map","zipObject","mapValues","m","substr","length","capitalize","getClassObj","forEach","capitalized","propertyName","method","outerArgs","apply","VormModelDelegate","this","delegates","getDelegates","clearDelegate","addDelegate","toString","constant","directive","VormFieldCtrl","require","link","scope","attrs","controllers","_controllers","babelHelpers","slicedToArray","vormField","vorm","addField","$on","removeField","$parse","handleChange","cb","$event","vormChange","bind","controller","$scope","$element","$attrs","$eval","extend","controllerAs","vormTemplateService","VormModelListCtrl","el","restrict","template","getDefaultTemplate","querySelectorAll","replaceWith","outerHTML","replace","vormModelList","inputs","config","compiler","defaults","copy","label","getModelCompiler","modelTemplate","limit","getLabel","getInputData","addInput","input","removeInput","getInputs","getLastInputId","inputId","last","getInputId","slice","transclude","fields","getFields","recalc","values","indexBy","field","Object","freeze","changeListeners","listener","handleModelChange","submitListeners","getValues","toUpperCase","vormInvoke","vormFieldTemplate","vormForm","Math","random","getOptions","version","minor","getInvokedData","options","nwOpts","equals","getData","$values","clonedElement","attr","$$postDigest","$injector","invokable","locals","isArray","$inject","handleSubmit","vormSubmit","provider","defaultWrapper","modelCompilers","modelTemplates","text","number","select","$get","$compile","modifyModelTemplates","processor"],"mappings":"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","file":"vorm.js","sourcesContent":["/*global require*/\n(function ( ) {\n\t\n\tangular.module('vorm', []);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormModelDelegate', [ function ( ) {\n\t\t\t\n\t\t\treturn function ( name ) {\n\t\t\t\t\n\t\t\t\tconst delegate = {};\n\t\t\t\tlet ngModel;\n\t\t\t\t\n\t\t\t\tdelegate.value = undefined;\n\t\t\t\t\n\t\t\t\tdelegate.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.setNgModel = function ( ) {\n\t\t\t\t\tngModel = arguments[0];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.getNgModel = function ( ) {\n\t\t\t\t\treturn ngModel;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.clearValue = function ( ) {\n\t\t\t\t\tngModel.$setViewValue(undefined);\n\t\t\t\t\tngModel.$render();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\treturn delegate;\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormEvent', [ '$document', '$window', function ( $document, $window ) {\n\t\t\t\n\t\t\tlet VormEvent;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst event = new $window.CustomEvent('foo'); // jshint ignore:line\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\treturn new $window.CustomEvent(type, {\n\t\t\t\t\t\tdetail: data,\n\t\t\t\t\t\tbubbles: true\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t} catch ( error ) {\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\tconst event = $document[0].createEvent('CustomEvent');\n\t\t\t\t\tevent.initCustomEvent(type, true, true, data);\n\t\t\t\t\treturn event;\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\treturn VormEvent;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormFieldCtrl', [ 'VormEvent', 'VormValueType', function ( VormEvent, VormValueType ) {\n\t\t\t\n\t\t\treturn function ( name, element ) {\n\t\t\t\t\n\t\t\t\tconst ctrl = {},\n\t\t\t\t\tmodels = [],\n\t\t\t\t\tviewChangeListeners = [],\n\t\t\t\t\tmodelChangeListeners = [],\n\t\t\t\t\tprefix = 'vorm-field-';\n\t\t\t\t\n\t\t\t\tlet valueType = VormValueType.SINGLE,\n\t\t\t\t\trequired;\n\t\t\t\t\n\t\t\t\tfunction setModelValue ( model, value ) {\n\t\t\t\t\t// $$writeModelToScope calls the view listeners\n\t\t\t\t\t// and we don't really want that\n\t\t\t\t\tconst { $viewChangeListeners, $modelValue } = model;\n\t\t\t\t\t\t\n\t\t\t\t\tmodel.$viewChangeListeners = [];\n\t\t\t\t\tmodel.$modelValue = value;\n\t\t\t\t\tmodel.$$writeModelToScope();\n\t\t\t\t\t\n\t\t\t\t\t// reset all the things\n\t\t\t\t\tmodel.listeners = $viewChangeListeners;\n\t\t\t\t\tmodel.$modelValue = $modelValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleViewChange ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('viewchange', { name: name } ));\n\t\t\t\t\t_.invoke(viewChangeListeners, 'call', null, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleFormatterCall ( ) {\n\t\t\t\t\t// now we know the model has changed\n\t\t\t\t\telement.dispatchEvent(new VormEvent('modelchange', { name: name } ));\n\t\t\t\t\t_.invoke(modelChangeListeners, 'call', null, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tctrl.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setName = function ( ) {\n\t\t\t\t\tname = arguments[0];\n\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\tctrl.addModel = function ( model ) {\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tmodel.$viewChangeListeners.push(handleViewChange);\n\t\t\t\t\tmodel.$formatters.push(handleFormatterCall);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.removeModel = function ( model ) {\n\t\t\t\t\t_.pull(models, model);\n\t\t\t\t\t_.pull(model.$viewChangeListeners, handleViewChange);\n\t\t\t\t\t_.pull(model.$formatters, handleFormatterCall);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getModels = function ( ) {\n\t\t\t\t\treturn models;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValue = function ( ) {\n\t\t\t\t\tlet value;\n\t\t\t\t\t\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tvalue = models[0] ? models[0].$modelValue : undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tvalue = _.pluck(models, '$modelValue');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t\t_.each(models, function ( model) {\n\t\t\t\t\t\t\tvalue[model.$name] = model.$modelValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn value;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValueType = function ( ) {\n\t\t\t\t\treturn valueType;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueType = function ( type ) {\n\t\t\t\t\tif([ VormValueType.SINGLE, VormValueType.LIST, VormValueType.NAMED ].indexOf(type) === -1) {\n\t\t\t\t\t\tthrow new Error('Unsupported VormValueType: ' + VormValueType);\n\t\t\t\t\t}\n\t\t\t\t\tvalueType = type;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValue = function ( value ) {\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tif(models[0]) {\n\t\t\t\t\t\t\tsetModelValue(models[0], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\t_.each(models, function ( model, index ) {\n\t\t\t\t\t\t\tsetModelValue(model, value[index]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tconst modelsToChange = models.concat();\n\t\t\t\t\t\t_.each(value, function ( val, key ) {\n\t\t\t\t\t\t\tvar model = _.find(models, { $name: key });\n\t\t\t\t\t\t\tif(model) {\n\t\t\t\t\t\t\t\tsetModelValue(model, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_.pull(modelsToChange, model);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(modelsToChange, function ( model ) {\n\t\t\t\t\t\t\tsetModelValue(model, undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\treturn required;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setRequired = function ( ) {\n\t\t\t\t\trequired = !!arguments[0];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isEmpty = function ( ) {\n\t\t\t\t\treturn models.every(function ( model ) {\n\t\t\t\t\t\treturn model.$isEmpty();\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet chain = _('valid invalid dirty pristine touched untouched required empty'.split(' '))\n\t\t\t\t\t\t.map(function ( key ) {\n\t\t\t\t\t\t\treturn prefix + key;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.zipObject()\n\t\t\t\t\t\t.mapValues(function ( value, key ) {\n\t\t\t\t\t\t\tlet m = key.substr(prefix.length);\n\t\t\t\t\t\t\treturn ctrl['is' + _.capitalize(m)]();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.each(function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\tctrl.getClassObj = function ( ) {\n\t\t\t\t\treturn chain.value();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.viewChangeListeners = viewChangeListeners;\n\t\t\t\tctrl.modelChangeListeners = modelChangeListeners;\n\t\t\t\n\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\tconst capitalized = _.capitalize(type),\n\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\tpropertyName = '$' + type,\n\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\n\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\treturn models[method](function ( model ) {\n\t\t\t\t\t\t\treturn model[propertyName];\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(type !== 'valid' && type !== 'invalid') {\n\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmodels.forEach(function ( model ) {\n\t\t\t\t\t\t\t\tmodel['$' + setName].apply(model, outerArgs);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn ctrl;\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormModelListCtrl', [ 'VormModelDelegate', function ( VormModelDelegate) {\n\t\t\t\n\t\t\treturn function ( ) {\n\t\t\t\t\n\t\t\t\tconst ctrl = this,\n\t\t\t\t\tdelegates = [];\n\t\t\t\t\t\n\t\t\t\tctrl.getDelegates = function ( ) {\n\t\t\t\t\treturn delegates;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.clearDelegate = function ( delegate ) {\n\t\t\t\t\tif(delegates.length === 1) {\n\t\t\t\t\t\tdelegate.clearValue();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_.pull(delegates, delegate);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.addDelegate = function ( name ) {\n\t\t\t\t\tlet delegate;\n\t\t\t\t\t\n\t\t\t\t\tif(!name) {\n\t\t\t\t\t\tname = delegates.length.toString();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdelegate = new VormModelDelegate(name);\n\t\t\t\t\tdelegates.push(delegate);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.constant('VormValueType',{\n\t\t\tSINGLE: 'single',\n\t\t\tLIST: 'list',\n\t\t\tNAMED: 'named'\n\t\t});\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('ngModel', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'ngModel', '^?vormField', '^?vormForm', '^?vormInput' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tlet [ ngModel, vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vormField || vorm) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!vormField) {\n\t\t\t\t\t\t\tvormField = new VormFieldCtrl(attrs.ngModel, element[0]);\n\t\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.addModel(ngModel);\n\t\t\t\t\t\t\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvormField.removeModel(ngModel);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormChange', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tlink: function ( scope, element, attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst cb = $parse(attrs.vormChange);\n\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( event, name ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$event: event,\n\t\t\t\t\t\t\t$name: event.detail ? event.detail.name : name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telement.bind('viewchange', handleChange);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormField', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst name = $scope.$eval($attrs.vormField) || $attrs.ngModel,\n\t\t\t\t\t\tctrl = this;\n\t\t\t\t\t\n\t\t\t\t\tangular.extend(ctrl, new VormFieldCtrl(name, $element[0]));\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormField',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tconst [ vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldTemplate', [ 'vormTemplateService', 'VormValueType', 'VormModelListCtrl', function ( vormTemplateService, VormValueType, VormModelListCtrl ) {\n\t\t\t\n\t\t\tvar el = angular.element(`\n\t\t\t\t<div class=\"vorm-input-list\">\n\t\t\t\t\t<div class=\"vorm-input-list-item\" ng-repeat=\"delegate in vormFieldTemplate.getDelegates()\">\n\t\t\t\t\t\t<vorm-input delegate=\"delegate\" compiler=\"vormFieldTemplate.getModelCompiler()\" data=\"vormFieldTemplate.getInputData()\"></vorm-input>\n\t\t\t\t\t\t<button type=\"button\" ng-click=\"vormFieldTemplate.clearDelegate(delegate)\" ng-show=\"vormField.getValueType()==='multiple'\">x</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormFieldTemplate', 'vormField' ],\n\t\t\t\ttemplate: function ( ) {\n\t\t\t\t\tvar element = angular.element(vormTemplateService.getDefaultTemplate());\n\t\t\t\t\t\n\t\t\t\t\tangular.element(element[0].querySelectorAll('[ng-transclude], ng-transclude')).replaceWith(el);\n\t\t\t\t\t\n\t\t\t\t\treturn element[0].outerHTML;\n\t\t\t\t},\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ctrl = this,\n\t\t\t\t\t\tvormModelList = new VormModelListCtrl(),\n\t\t\t\t\t\tinputs = [];\n\n\t\t\t\t\tlet config = $scope.$eval($attrs.config) || {},\n\t\t\t\t\t\tcompiler,\n\t\t\t\t\t\tvormField;\n\t\t\t\t\t\n\t\t\t\t\tconfig = _.defaults(angular.copy(config), { \n\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\ttype: $attrs.type,\n\t\t\t\t\t\tlabel: $attrs.label,\n\t\t\t\t\t\ttemplate: $scope.$eval($attrs.template),\n\t\t\t\t\t\tdata: $scope.$eval($attrs.data)\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(!config.name || !config.type) {\n\t\t\t\t\t\tthrow new Error('Missing one of required arguments: name, type ');\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tcompiler = vormTemplateService.getModelCompiler(config.type, config.modelTemplate);\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setName(config.name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(config.limit > 1) {\n\t\t\t\t\t\t\tvormField.setValueType(VormValueType.LIST);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setRequired(config.required || false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormModelList.addDelegate();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\t\treturn config.label;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getModelCompiler = function ( ) {\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputData = function ( ) {\n\t\t\t\t\t\treturn config.data;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.addInput = function ( input ) {\n\t\t\t\t\t\tinputs.push(input);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeInput = function ( input ) {\n\t\t\t\t\t\t_.pull(inputs, input);\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputs = function ( ) {\n\t\t\t\t\t\treturn inputs;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLastInputId = function ( ) {\n\t\t\t\t\t\tvar input = _.last(inputs),\n\t\t\t\t\t\t\tinputId;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(input) {\n\t\t\t\t\t\t\tinputId = input.getInputId();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn inputId;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getDelegates = vormModelList.getDelegates;\n\t\t\t\t\tctrl.addDelegate = vormModelList.addDelegate;\n\t\t\t\t\tctrl.clearDelegate = vormModelList.clearDelegate;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldTemplate',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldWrapper', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'EA',\n\t\t\t\ttransclude: true,\n\t\t\t\treplace: true,\n\t\t\t\ttemplate: vormTemplateService.getDefaultTemplate()\n\t\t\t}\n\t\t\t\n\t\t}]);\n\t\n})();\n","(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldset', [ function ( ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\ttemplate: `\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<vorm-field-template config=\"field\" ng-repeat=\"field in vormFieldset.getFields()\">\n\t\t\t\t\t\t</vorm-field-template>\n\t\t\t\t\t</fieldset>\n\t\t\t\t`,\n\t\t\t\tscope: {\n\t\t\t\t\tfields: '&'\n\t\t\t\t},\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', function ( $scope ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this;\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = $scope.fields;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldset'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormForm', [ function ( ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'form' ],\n\t\t\t\tcontroller: [ '$element', function ( $element ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ctrl = this,\n\t\t\t\t\t\tfields = [],\n\t\t\t\t\t\tchangeListeners = [],\n\t\t\t\t\t\tsubmitListeners = [];\n\t\t\t\t\t\n\t\t\t\t\tlet values = {};\n\t\t\t\t\t\t\n\t\t\t\t\tfunction recalc ( ) {\n\t\t\t\t\t\tvalues = _(fields)\n\t\t\t\t\t\t\t.indexBy(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getName();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.mapValues(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getValue();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.value();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tObject.freeze(values);\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( ) {\n\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(changeListeners, function ( listener ) {\n\t\t\t\t\t\t\tlistener.apply(ctrl, outerArgs);\t\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction handleModelChange ( ) {\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.addField = function ( field ) {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\tfield.viewChangeListeners.push(handleChange);\n\t\t\t\t\t\tfield.modelChangeListeners.push(handleModelChange);\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeField = function ( field ) {\n\t\t\t\t\t\t_.pull(fields, field);\n\t\t\t\t\t\t_.pull(field.viewChangeListeners, handleChange);\n\t\t\t\t\t\t_.pull(field.modelChangeListeners, handleModelChange);\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn fields;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValues = function ( ) {\n\t\t\t\t\t\treturn values;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.changeListeners = changeListeners;\n\t\t\t\t\tctrl.submitListeners = submitListeners;\n\t\t\t\t\t\n\t\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\t\tconst capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\t\treturn fields[method](function ( field ) {\n\t\t\t\t\t\t\t\treturn field[getName]();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!(type === 'valid' || type === 'invalid')) {\n\t\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfields.forEach(function ( field ) {\n\t\t\t\t\t\t\t\t\tfield[setName].apply(field, outerArgs);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$element.bind('submit', function ( ) {\n\t\t\t\t\t\t_.invoke(submitListeners, 'call', null, values);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn ctrl;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormForm'\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormInput', [ 'vormInvoke', function ( vormInvoke ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormInput', '^vormField', '^vormFieldTemplate', '^?vormForm' ],\n\t\t\t\tscope: {\n\t\t\t\t\tcompiler: '&',\n\t\t\t\t\tdelegate: '=',\n\t\t\t\t\tdata: '&'\n\t\t\t\t},\n\t\t\t\tcontroller: [ '$scope', function ( $scope ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormFieldTemplate,\n\t\t\t\t\t\tvormForm,\n\t\t\t\t\t\tinputId = Math.random().toString(36).slice(2);\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\tvormFieldTemplate = controllers[1];\n\t\t\t\t\t\tvormForm = controllers[2];\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFieldTemplate.addInput(ctrl);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\t\treturn vormField && vormField.isRequired();\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputId = function ( ) {\n\t\t\t\t\t\treturn inputId;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(angular.version.minor >= 4) {\n\t\t\t\t\t\t// dynamic options throws an error in <=1.3.x\n\t\t\t\t\t\t// fixed in 1.4.x\n\t\t\t\t\t\t// https://github.com/angular/angular.js/pull/10639\n\t\t\t\t\t\tctrl.getOptions = function ( ) {\n\t\t\t\t\t\t\treturn ctrl.getInvokedData('options');\t\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctrl.getOptions = (function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet options;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn function ( ) {\n\t\t\t\t\t\t\t\tconst nwOpts = ctrl.getInvokedData('options');\n\t\t\t\t\t\t\t\tif(options !== nwOpts && !angular.equals(options,nwOpts)) {\n\t\t\t\t\t\t\t\t\toptions = nwOpts;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn options;\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInvokedData = function ( key ) {\n\t\t\t\t\t\tlet values;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormForm) {\n\t\t\t\t\t\t\tvalues = vormForm.getValues();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalues = {};\n\t\t\t\t\t\t\tvalues[vormField.getName()] = vormField.getValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn vormInvoke(ctrl.getData()[key], {\n\t\t\t\t\t\t\t$values: values\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getData = $scope.data;\n\t\t\t\t\t\n\t\t\t\t\t$scope.$on('$destroy', function ( ) {\n\t\t\t\t\t\tvormFieldTemplate.removeInput(ctrl);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormInput',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t\t\n\t\t\t\t\tscope.compiler()(scope, function ( clonedElement ) {\n\t\t\t\t\t\telement.replaceWith(clonedElement);\n\t\t\t\t\t\tclonedElement.attr('id', controllers[0].getInputId());\n\t\t\t\t\t\t\n\t\t\t\t\t\tscope.$$postDigest(function ( ) {\n\t\t\t\t\t\t\tscope.delegate.setNgModel(clonedElement.controller('ngModel'));\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('vormInvoke', [ '$injector', function ( $injector ) {\n\t\t\t\n\t\t\treturn function ( invokable, locals ) {\n\t\t\t\t\n\t\t\t\tvar value;\n\t\t\t\t\n\t\t\t\tif(!invokable) {\n\t\t\t\t\treturn invokable;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif((_.isArray(invokable) && typeof _.last(invokable) === 'function') || invokable.$inject !== undefined) {\n\t\t\t\t\tvalue = $injector.invoke(invokable, null, angular.copy(locals));\n\t\t\t\t} else if(typeof invokable === 'function') {\n\t\t\t\t\tvalue = invokable();\n\t\t\t\t} else {\n\t\t\t\t\tvalue = invokable;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormModelList', [ 'VormModelListCtrl', function ( VormModelListCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\t\n\t\t\t\t\tVormModelListCtrl.apply(this, null);\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormModelList'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormSubmit', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tconst [ vorm ] = controllers;\n\t\t\t\t\tlet cb;\n\t\t\t\t\t\n\t\t\t\t\tfunction handleSubmit ( ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$values: vorm.getValues()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormSubmit);\n\t\t\t\t\t\n\t\t\t\t\telement.bind('submit', handleSubmit);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.provider('vormTemplateService', [ function ( ) {\n\t\t\t\n\t\t\tlet defaultWrapper,\n\t\t\t\twrapper,\n\t\t\t\tmodelCompilers,\n\t\t\t\tmodelTemplates = {};\n\t\t\t\t\n\t\t\tconst vormTemplateService = {};\n\t\t\t\t\n\t\t\tdefaultWrapper = `\n\t\t\t\t<div class=\"vorm-field\"\n\t\t\t\t\tng-class=\"vormField.getClassObj()\"\n\t\t\t\t\tvorm-field\n\t\t\t\t>\n\t\t\t\t\t<label class=\"vorm-field-label\" for=\"{{vormFieldTemplate.getLastInputId()}}\">\n\t\t\t\t\t\t{{vormFieldTemplate.getLabel()}}\n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"vorm-input\" ng-transclude>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"vorm-field-status\">\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t\n\t\t\tmodelTemplates.text = `<input type=\"text\" placeholder=\"{{vormInput.getData().placeholder}}\"/>`;\n\t\t\tmodelTemplates.number = `<input type=\"number\"/>`;\n\t\t\tmodelTemplates.select = `<select ng-options=\"option.value as option.label for option in vormInput.getOptions()\"><option value=\"\" data-ng-show=\"vormInput.getInvokedData('notSelectedLabel')\">{{vormInput.getInvokedData('notSelectedLabel')}}</option></select>`;\n\t\t\t\n\t\t\tmodelTemplates = _.mapValues(modelTemplates, function ( template ) {\n\t\t\t\treturn angular.element(template);\n\t\t\t});\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\t$get: [ '$compile', function ( $compile ) {\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultTemplate = function ( ) {\n\t\t\t\t\t\treturn defaultWrapper;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getModelCompiler = function ( type, template ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet compiler;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(template) {\n\t\t\t\t\t\t\tcompiler = $compile(template);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcompiler = modelCompilers[type];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!compiler) {\n\t\t\t\t\t\t\tthrow new Error(`Model template for ${type} not found`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tmodelCompilers = _.mapValues(modelTemplates, function ( el ) {\n\t\t\t\t\t\tel.attr('ng-model', 'model.value');\n\t\t\t\t\t\tel.attr('ng-required', 'vormInput.isRequired()');\n\t\t\t\t\t\treturn $compile(el);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn vormTemplateService;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tmodifyModelTemplates: function ( processor ) {\n\t\t\t\t\tmodelTemplates = _.mapValues(modelTemplates, function ( template, type ) {\n\t\t\t\t\t\treturn processor(template, type);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormModelDelegate', [ function ( ) {\n\t\t\t\n\t\t\treturn function ( name ) {\n\t\t\t\t\n\t\t\t\tconst delegate = {};\n\t\t\t\tlet ngModel;\n\t\t\t\t\n\t\t\t\tdelegate.value = undefined;\n\t\t\t\t\n\t\t\t\tdelegate.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.setNgModel = function ( ) {\n\t\t\t\t\tngModel = arguments[0];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.getNgModel = function ( ) {\n\t\t\t\t\treturn ngModel;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdelegate.clearValue = function ( ) {\n\t\t\t\t\tngModel.$setViewValue(undefined);\n\t\t\t\t\tngModel.$render();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\treturn delegate;\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n"],"sourceRoot":"/source/"}