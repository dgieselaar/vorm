{"version":3,"sources":["_.js","ModelDelegate.js","VormEvent.js","VormFieldCtrl.js","VormModelListCtrl.js","VormValueType.js","ngModel.js","vormChange.js","vormField.js","vormFieldTemplate.js","vormFieldWrapper.js","vormFieldset.js","vormForm.js","vormInput.js","vormModelList.js","vormSubmit.js","vormTemplateService.js"],"names":["angular","module","factory","name","delegate","value","undefined","getName","$document","$window","VormEvent","CustomEvent","type","data","detail","bubbles","error","event","createEvent","initCustomEvent","VormValueType","element","setModelValue","model","$viewChangeListeners","$modelValue","$$writeModelToScope","listeners","handleViewChange","dispatchEvent","_","invoke","viewChangeListeners","handleFormatterCall","modelChangeListeners","ctrl","models","prefix","valueType","SINGLE","required","setName","arguments","addModel","push","$formatters","removeModel","pull","getModels","getValue","LIST","pluck","NAMED","each","$name","getValueType","setValueType","indexOf","Error","setValue","index","modelsToChange","concat","val","key","find","isRequired","setRequired","isEmpty","every","$isEmpty","chain","split","map","zipObject","mapValues","m","substr","length","capitalize","getClassObj","forEach","capitalized","propertyName","method","outerArgs","apply","ModelDelegate","this","delegates","getDelegates","clearDelegate","addDelegate","toString","constant","directive","VormFieldCtrl","require","link","scope","attrs","controllers","_controllers","babelHelpers","slicedToArray","ngModel","vormField","vorm","addField","$on","removeField","$parse","handleChange","cb","$event","vormChange","bind","controller","$scope","$element","$attrs","$eval","extend","controllerAs","vormTemplateService","VormModelListCtrl","el","restrict","template","getDefaultTemplate","querySelectorAll","replaceWith","outerHTML","replace","config","compiler","vormModelList","defaults","copy","label","getModelCompiler","modelTemplate","limit","getLabel","getInputData","createDelegate","slice","transclude","fields","getFields","recalc","values","indexBy","field","Object","freeze","changeListeners","listener","handleModelChange","submitListeners","getValues","toUpperCase","clonedElement","handleSubmit","$values","vormSubmit","provider","defaultWrapper","modelCompilers","modelTemplates","text","number","$get","$compile","tpl","attr"],"mappings":"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","file":"vorm.js","sourcesContent":["/*global require*/\n(function ( ) {\n\t\n\tangular.module('vorm', []);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('ModelDelegate', [ function ( ) {\n\t\t\t\n\t\t\treturn function ( name ) {\n\t\t\t\t\n\t\t\t\tconst delegate = {};\n\t\t\t\t\n\t\t\t\tdelegate.value = undefined;\n\t\t\t\t\n\t\t\t\tdelegate.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\treturn delegate;\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormEvent', [ '$document', '$window', function ( $document, $window ) {\n\t\t\t\n\t\t\tlet VormEvent;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst event = new $window.CustomEvent('foo'); // jshint ignore:line\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\treturn new $window.CustomEvent(type, {\n\t\t\t\t\t\tdetail: data,\n\t\t\t\t\t\tbubbles: true\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t} catch ( error ) {\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\tconst event = $document[0].createEvent('CustomEvent');\n\t\t\t\t\tevent.initCustomEvent(type, true, true, data);\n\t\t\t\t\treturn event;\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\treturn VormEvent;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormFieldCtrl', [ 'VormEvent', 'VormValueType', function ( VormEvent, VormValueType ) {\n\t\t\t\n\t\t\treturn function ( name, element ) {\n\t\t\t\t\n\t\t\t\tconst ctrl = {},\n\t\t\t\t\tmodels = [],\n\t\t\t\t\tviewChangeListeners = [],\n\t\t\t\t\tmodelChangeListeners = [],\n\t\t\t\t\tprefix = 'vorm-field-';\n\t\t\t\t\n\t\t\t\tlet valueType = VormValueType.SINGLE,\n\t\t\t\t\trequired;\n\t\t\t\t\n\t\t\t\tfunction setModelValue ( model, value ) {\n\t\t\t\t\t// $$writeModelToScope calls the view listeners\n\t\t\t\t\t// and we don't really want that\n\t\t\t\t\tconst { $viewChangeListeners, $modelValue } = model;\n\t\t\t\t\t\t\n\t\t\t\t\tmodel.$viewChangeListeners = [];\n\t\t\t\t\tmodel.$modelValue = value;\n\t\t\t\t\tmodel.$$writeModelToScope();\n\t\t\t\t\t\n\t\t\t\t\t// reset all the things\n\t\t\t\t\tmodel.listeners = $viewChangeListeners;\n\t\t\t\t\tmodel.$modelValue = $modelValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleViewChange ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('viewchange', { name: name } ));\n\t\t\t\t\t_.invoke(viewChangeListeners, 'call', null, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleFormatterCall ( ) {\n\t\t\t\t\t// now we know the model has changed\n\t\t\t\t\telement.dispatchEvent(new VormEvent('modelchange', { name: name } ));\n\t\t\t\t\t_.invoke(modelChangeListeners, 'call', null, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tctrl.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setName = function ( ) {\n\t\t\t\t\tname = arguments[0];\n\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\tctrl.addModel = function ( model ) {\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tmodel.$viewChangeListeners.push(handleViewChange);\n\t\t\t\t\tmodel.$formatters.push(handleFormatterCall);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.removeModel = function ( model ) {\n\t\t\t\t\t_.pull(models, model);\n\t\t\t\t\t_.pull(model.$viewChangeListeners, handleViewChange);\n\t\t\t\t\t_.pull(model.$formatters, handleFormatterCall);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getModels = function ( ) {\n\t\t\t\t\treturn models;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValue = function ( ) {\n\t\t\t\t\tlet value;\n\t\t\t\t\t\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tvalue = models[0] ? models[0].$modelValue : undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tvalue = _.pluck(models, '$modelValue');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t\t_.each(models, function ( model) {\n\t\t\t\t\t\t\tvalue[model.$name] = model.$modelValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn value;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValueType = function ( ) {\n\t\t\t\t\treturn valueType;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueType = function ( type ) {\n\t\t\t\t\tif([ VormValueType.SINGLE, VormValueType.LIST, VormValueType.NAMED ].indexOf(type) === -1) {\n\t\t\t\t\t\tthrow new Error('Unsupported VormValueType: ' + VormValueType);\n\t\t\t\t\t}\n\t\t\t\t\tvalueType = type;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValue = function ( value ) {\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tif(models[0]) {\n\t\t\t\t\t\t\tsetModelValue(models[0], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\t_.each(models, function ( model, index ) {\n\t\t\t\t\t\t\tsetModelValue(model, value[index]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tconst modelsToChange = models.concat();\n\t\t\t\t\t\t_.each(value, function ( val, key ) {\n\t\t\t\t\t\t\tvar model = _.find(models, { $name: key });\n\t\t\t\t\t\t\tif(model) {\n\t\t\t\t\t\t\t\tsetModelValue(model, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_.pull(modelsToChange, model);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(modelsToChange, function ( model ) {\n\t\t\t\t\t\t\tsetModelValue(model, undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\treturn required;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setRequired = function ( ) {\n\t\t\t\t\trequired = !!arguments[0];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isEmpty = function ( ) {\n\t\t\t\t\treturn models.every(function ( model ) {\n\t\t\t\t\t\treturn model.$isEmpty();\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet chain = _('valid invalid dirty pristine touched untouched required empty'.split(' '))\n\t\t\t\t\t\t.map(function ( key ) {\n\t\t\t\t\t\t\treturn prefix + key;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.zipObject()\n\t\t\t\t\t\t.mapValues(function ( value, key ) {\n\t\t\t\t\t\t\tlet m = key.substr(prefix.length);\n\t\t\t\t\t\t\treturn ctrl['is' + _.capitalize(m)]();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.each(function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\tctrl.getClassObj = function ( ) {\n\t\t\t\t\treturn chain.value();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.viewChangeListeners = viewChangeListeners;\n\t\t\t\tctrl.modelChangeListeners = modelChangeListeners;\n\t\t\t\n\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\tconst capitalized = _.capitalize(type),\n\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\tpropertyName = '$' + type,\n\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\n\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\treturn models[method](function ( model ) {\n\t\t\t\t\t\t\treturn model[propertyName];\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(type !== 'valid' && type !== 'invalid') {\n\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmodels.forEach(function ( model ) {\n\t\t\t\t\t\t\t\tmodel['$' + setName].apply(model, outerArgs);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn ctrl;\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormModelListCtrl', [ 'ModelDelegate', function ( ModelDelegate) {\n\t\t\t\n\t\t\treturn function ( ) {\n\t\t\t\t\n\t\t\t\tconst ctrl = this,\n\t\t\t\t\tdelegates = [];\n\t\t\t\t\t\n\t\t\t\tctrl.getDelegates = function ( ) {\n\t\t\t\t\treturn delegates;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.clearDelegate = function ( delegate ) {\n\t\t\t\t\tif(delegates.length === 1) {\n\t\t\t\t\t\tdelegate.value = undefined;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_.pull(delegates, delegate);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.addDelegate = function ( name ) {\n\t\t\t\t\tlet delegate;\n\t\t\t\t\t\n\t\t\t\t\tif(!name) {\n\t\t\t\t\t\tname = delegates.length.toString();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdelegate = new ModelDelegate(name);\n\t\t\t\t\tdelegates.push(delegate);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.constant('VormValueType',{\n\t\t\tSINGLE: 'single',\n\t\t\tLIST: 'list',\n\t\t\tNAMED: 'named'\n\t\t});\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('ngModel', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'ngModel', '^?vormField', '^?vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tlet [ ngModel, vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vormField || vorm) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!vormField) {\n\t\t\t\t\t\t\tvormField = new VormFieldCtrl(attrs.ngModel, element[0]);\n\t\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.addModel(ngModel);\n\t\t\t\t\t\t\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvormField.removeModel(ngModel);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormChange', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tlink: function ( scope, element, attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst cb = $parse(attrs.vormChange);\n\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( event, name ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$event: event,\n\t\t\t\t\t\t\t$name: event.detail ? event.detail.name : name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telement.bind('viewchange', handleChange);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormField', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst name = $scope.$eval($attrs.vormField) || $attrs.ngModel,\n\t\t\t\t\t\tctrl = this;\n\t\t\t\t\t\n\t\t\t\t\tangular.extend(ctrl, new VormFieldCtrl(name, $element[0]));\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormField',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tconst [ vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldTemplate', [ 'vormTemplateService', 'VormValueType', 'VormModelListCtrl', function ( vormTemplateService, VormValueType, VormModelListCtrl ) {\n\t\t\t\n\t\t\tvar el = angular.element(`\n\t\t\t\t<ul class=\"vorm-input-list\">\n\t\t\t\t\t<li class=\"vorm-input-list-item\" ng-repeat=\"model in vormFieldTemplate.getDelegates()\">\n\t\t\t\t\t\t<vorm-input model=\"model\" compiler=\"vormFieldTemplate.getModelCompiler()\" data=\"vormFieldTemplate.getInputData()\"></vorm-input>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t`);\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormFieldTemplate', 'vormField' ],\n\t\t\t\ttemplate: function ( ) {\n\t\t\t\t\tvar element = angular.element(vormTemplateService.getDefaultTemplate());\n\t\t\t\t\t\n\t\t\t\t\tangular.element(element[0].querySelectorAll('[ng-transclude], ng-transclude')).replaceWith(el);\n\t\t\t\t\t\n\t\t\t\t\treturn element[0].outerHTML;\n\t\t\t\t},\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ctrl = this;\n\n\t\t\t\t\tlet config = $scope.$eval($attrs.config) || {},\n\t\t\t\t\t\tcompiler,\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormModelList = new VormModelListCtrl();\n\t\t\t\t\t\n\t\t\t\t\tconfig = _.defaults(angular.copy(config), { \n\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\ttype: $attrs.type,\n\t\t\t\t\t\tlabel: $attrs.label,\n\t\t\t\t\t\ttemplate: $scope.$eval($attrs.label)\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(!config.name || !config.type) {\n\t\t\t\t\t\tthrow new Error('Missing one of required arguments: name, type ');\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tcompiler = vormTemplateService.getModelCompiler(config.type, config.modelTemplate);\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setName(config.name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(config.limit > 1) {\n\t\t\t\t\t\t\tvormField.setValueType(VormValueType.LIST);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setRequired(config.required || false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormModelList.addDelegate();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\t\treturn config.label;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getModelCompiler = function ( ) {\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputData = function ( ) {\n\t\t\t\t\t\treturn config.data;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getDelegates = vormModelList.getDelegates;\n\t\t\t\t\tctrl.addDelegate = vormModelList.createDelegate;\n\t\t\t\t\tctrl.clearDelegate = vormModelList.clearDelegate;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldTemplate',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldWrapper', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'EA',\n\t\t\t\ttransclude: true,\n\t\t\t\treplace: true,\n\t\t\t\ttemplate: vormTemplateService.getDefaultTemplate()\n\t\t\t}\n\t\t\t\n\t\t}]);\n\t\n})();\n","(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldset', [ function ( ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\ttemplate: `\n\t\t\t\t\t<vorm-field-template config=\"field\" ng-repeat=\"field in vormFieldset.getFields()\">\n\t\t\t\t\t</vorm-field-template>\n\t\t\t\t`,\n\t\t\t\tscope: {\n\t\t\t\t\tfields: '&'\n\t\t\t\t},\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', function ( $scope ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this;\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = $scope.fields;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldset'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormForm', [ function ( ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'form' ],\n\t\t\t\tcontroller: [ '$element', function ( $element ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ctrl = this,\n\t\t\t\t\t\tfields = [],\n\t\t\t\t\t\tchangeListeners = [],\n\t\t\t\t\t\tsubmitListeners = [];\n\t\t\t\t\t\n\t\t\t\t\tlet values = {};\n\t\t\t\t\t\t\n\t\t\t\t\tfunction recalc ( ) {\n\t\t\t\t\t\tvalues = _(fields)\n\t\t\t\t\t\t\t.indexBy(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getName();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.mapValues(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getValue();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.value();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tObject.freeze(values);\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( ) {\n\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(changeListeners, function ( listener ) {\n\t\t\t\t\t\t\tlistener.apply(ctrl, outerArgs);\t\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction handleModelChange ( ) {\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.addField = function ( field ) {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\tfield.viewChangeListeners.push(handleChange);\n\t\t\t\t\t\tfield.modelChangeListeners.push(handleModelChange);\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeField = function ( field ) {\n\t\t\t\t\t\t_.pull(fields, field);\n\t\t\t\t\t\t_.pull(field.viewChangeListeners, handleChange);\n\t\t\t\t\t\t_.pull(field.modelChangeListeners, handleModelChange);\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn fields;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValues = function ( ) {\n\t\t\t\t\t\treturn values;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.changeListeners = changeListeners;\n\t\t\t\t\tctrl.submitListeners = submitListeners;\n\t\t\t\t\t\n\t\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\t\tconst capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\t\treturn fields[method](function ( field ) {\n\t\t\t\t\t\t\t\treturn field[getName]();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!(type === 'valid' || type === 'invalid')) {\n\t\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfields.forEach(function ( field ) {\n\t\t\t\t\t\t\t\t\tfield[setName].apply(field, outerArgs);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$element.bind('submit', function ( ) {\n\t\t\t\t\t\t_.invoke(submitListeners, 'call', null, values);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn ctrl;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormForm'\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormInput', [ function ( ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormInput', '^vormField' ],\n\t\t\t\tscope: {\n\t\t\t\t\tcompiler: '&',\n\t\t\t\t\tmodel: '=',\n\t\t\t\t\tdata: '&'\n\t\t\t\t},\n\t\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tvormField;\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\t\treturn vormField && vormField.isRequired();\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormInput',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t\t\n\t\t\t\t\tscope.compiler()(scope, function ( clonedElement ) {\n\t\t\t\t\t\telement.replaceWith(clonedElement);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormModelList', [ 'VormModelListCtrl', function ( VormModelListCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\t\n\t\t\t\t\tVormModelListCtrl.apply(this, null);\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormModelList'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormSubmit', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tconst [ vorm ] = controllers;\n\t\t\t\t\tlet cb;\n\t\t\t\t\t\n\t\t\t\t\tfunction handleSubmit ( ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$values: vorm.getValues()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormSubmit);\n\t\t\t\t\t\n\t\t\t\t\telement.bind('submit', handleSubmit);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.provider('vormTemplateService', [ function ( ) {\n\t\t\t\n\t\t\tlet defaultWrapper,\n\t\t\t\twrapper,\n\t\t\t\tmodelCompilers;\n\t\t\t\t\n\t\t\tconst vormTemplateService = {},\n\t\t\t\tmodelTemplates = {};\n\t\t\t\t\n\t\t\tdefaultWrapper = `\n\t\t\t\t<div class=\"vorm-field\"\n\t\t\t\t\tng-class=\"vormField.getClassObj()\"\n\t\t\t\t\tvorm-field\n\t\t\t\t>\n\t\t\t\t\t<div class=\"vorm-field-label\">\n\t\t\t\t\t\t{{vormFieldTemplate.getLabel()}}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"vorm-input\" ng-transclude>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"vorm-field-status\">\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t\n\t\t\tmodelTemplates.text = `<input type=\"text\" placeholder=\"{{vormFieldTemplate.getInputData().placeholder}}\"/>`;\n\t\t\tmodelTemplates.number = `<input type=\"number\"/>`;\n\t\t\t\t\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\t$get: [ '$compile', function ( $compile ) {\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultTemplate = function ( ) {\n\t\t\t\t\t\treturn defaultWrapper;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getModelCompiler = function ( type, template ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet compiler;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(template) {\n\t\t\t\t\t\t\tcompiler = $compile(template);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcompiler = modelCompilers[type];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!compiler) {\n\t\t\t\t\t\t\tthrow new Error(`Model template for ${type} not found`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tmodelCompilers = _.mapValues(modelTemplates, function ( tpl ) {\n\t\t\t\t\t\tconst el = angular.element(tpl);\n\t\t\t\t\t\tel.attr('ng-model', 'model.value');\n\t\t\t\t\t\tel.attr('ng-required', 'vormInput.isRequired()');\n\t\t\t\t\t\treturn $compile(el);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn vormTemplateService;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n"],"sourceRoot":"/source/"}