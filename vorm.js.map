{"version":3,"sources":["_.js","ModelDelegate.js","VormEvent.js","VormFieldCtrl.js","VormValueType.js","ngModel.js","vormChange.js","vormField.js","vormFieldTemplate.js","vormForm.js","vormInput.js","vormModelList.js","vormSubmit.js","vormTemplateService.js"],"names":["angular","module","factory","name","delegate","value","undefined","getName","$document","$window","VormEvent","CustomEvent","type","data","detail","error","event","createEvent","initCustomEvent","VormValueType","element","setModelValue","model","$viewChangeListeners","$modelValue","$$writeModelToScope","listeners","handleViewChange","dispatchEvent","_","invoke","viewChangeListeners","handleFormatterCall","modelChangeListeners","ctrl","models","valueType","SINGLE","setName","arguments","addModel","push","$formatters","removeModel","pull","getModels","getValue","LIST","pluck","NAMED","each","$name","getValueType","setValueType","indexOf","Error","setValue","index","modelsToChange","concat","val","key","find","split","forEach","capitalized","substr","toUpperCase","propertyName","method","outerArgs","apply","constant","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_step","_arr","_iterator","next","done","length","TypeError","directive","VormFieldCtrl","require","link","scope","attrs","controllers","_controllers","ngModel","vormField","vorm","addField","$on","removeField","$parse","handleChange","cb","$event","vormChange","bind","controller","$scope","$element","$attrs","$eval","extend","this","controllerAs","vormTemplateService","restrict","template","getDefaultTemplate","replace","compiler","vormModelList","config","defaults","copy","label","getModelCompiler","modelTemplate","limit","addDelegate","getLabel","getInputData","slice","recalc","values","fields","indexBy","field","mapValues","freeze","changeListeners","listener","handleModelChange","submitListeners","getFields","getValues","modelDelegate","transclude","vormFieldTemplate","replaceWith","clone","ModelDelegate","delegates","getDelegates","clearDelegate","toString","handleSubmit","$values","vormSubmit","provider","defaultWrapper","modelTemplates","modelCompilers","text","$get","$compile","tpl","el","attr","$inject"],"mappings":"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","file":"vorm.js","sourcesContent":["/*global require*/\n(function ( ) {\n\t\n\tangular.module('vorm', []);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('ModelDelegate', [ function ( ) {\n\t\t\t\n\t\t\treturn function ( name ) {\n\t\t\t\t\n\t\t\t\tvar delegate = {};\n\t\t\t\t\n\t\t\t\tdelegate.value = undefined;\n\t\t\t\t\n\t\t\t\tdelegate.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\treturn delegate;\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormEvent', [ '$document', '$window', function ( $document, $window ) {\n\t\t\t\n\t\t\tvar VormEvent;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tvar event = new $window.CustomEvent('foo'); // jshint ignore:line\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\treturn new $window.CustomEvent(type, {\n\t\t\t\t\t\tdetail: data\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t} catch ( error ) {\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\tvar event = $document[0].createEvent('CustomEvent');\n\t\t\t\t\tevent.initCustomEvent(type, true, true, data);\n\t\t\t\t\treturn event;\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\treturn VormEvent;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormFieldCtrl', [ 'VormEvent', 'VormValueType', function ( VormEvent, VormValueType ) {\n\t\t\t\n\t\t\treturn function ( name, element ) {\n\t\t\t\t\n\t\t\t\tvar ctrl = {},\n\t\t\t\t\tmodels = [],\n\t\t\t\t\tviewChangeListeners = [],\n\t\t\t\t\tmodelChangeListeners = [],\n\t\t\t\t\tvalueType = VormValueType.SINGLE;\n\t\t\t\t\n\t\t\t\tfunction setModelValue ( model, value ) {\n\t\t\t\t\t// $$writeModelToScope calls the view listeners\n\t\t\t\t\t// and we don't really want that\n\t\t\t\t\tvar { $viewChangeListeners, $modelValue } = model;\n\t\t\t\t\t\t\n\t\t\t\t\tmodel.$viewChangeListeners = [];\n\t\t\t\t\tmodel.$modelValue = value;\n\t\t\t\t\tmodel.$$writeModelToScope();\n\t\t\t\t\t\n\t\t\t\t\t// reset all the things\n\t\t\t\t\tmodel.listeners = $viewChangeListeners;\n\t\t\t\t\tmodel.$modelValue = $modelValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleViewChange ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('viewchange', { name: name } ));\n\t\t\t\t\t_.invoke(viewChangeListeners, 'call', null, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleFormatterCall ( ) {\n\t\t\t\t\t// now we know the model has changed\n\t\t\t\t\telement.dispatchEvent(new VormEvent('modelchange', { name: name } ));\n\t\t\t\t\t_.invoke(modelChangeListeners, 'call', null, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tctrl.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setName = function ( ) {\n\t\t\t\t\tname = arguments[0];\n\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\tctrl.addModel = function ( model ) {\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tmodel.$viewChangeListeners.push(handleViewChange);\n\t\t\t\t\tmodel.$formatters.push(handleFormatterCall);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.removeModel = function ( model ) {\n\t\t\t\t\t_.pull(models, model);\n\t\t\t\t\t_.pull(model.$viewChangeListeners, handleViewChange);\n\t\t\t\t\t_.pull(model.$formatters, handleFormatterCall);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getModels = function ( ) {\n\t\t\t\t\treturn models;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValue = function ( ) {\n\t\t\t\t\tvar value;\n\t\t\t\t\t\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tvalue = models[0] ? models[0].$modelValue : undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tvalue = _.pluck(models, '$modelValue');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t\t_.each(models, function ( model) {\n\t\t\t\t\t\t\tvalue[model.$name] = model.$modelValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn value;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValueType = function ( ) {\n\t\t\t\t\treturn valueType;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueType = function ( type ) {\n\t\t\t\t\tif([ VormValueType.SINGLE, VormValueType.LIST, VormValueType.NAMED ].indexOf(type) === -1) {\n\t\t\t\t\t\tthrow new Error('Unsupported VormValueType: ' + VormValueType);\n\t\t\t\t\t}\n\t\t\t\t\tvalueType = type;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValue = function ( value ) {\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tif(models[0]) {\n\t\t\t\t\t\t\tsetModelValue(models[0], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\t_.each(models, function ( model, index ) {\n\t\t\t\t\t\t\tsetModelValue(model, value[index]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tlet modelsToChange = models.concat();\n\t\t\t\t\t\t_.each(value, function ( val, key ) {\n\t\t\t\t\t\t\tvar model = _.find(models, { $name: key });\n\t\t\t\t\t\t\tif(model) {\n\t\t\t\t\t\t\t\tsetModelValue(model, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_.pull(modelsToChange, model);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(modelsToChange, function ( model ) {\n\t\t\t\t\t\t\tsetModelValue(model, undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.viewChangeListeners = viewChangeListeners;\n\t\t\t\tctrl.modelChangeListeners = modelChangeListeners;\n\t\t\t\t\n\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\tvar capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\tpropertyName = '$' + type,\n\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\n\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\treturn models[method](function ( model ) {\n\t\t\t\t\t\t\treturn model[propertyName];\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(method !== 'valid' && method !== 'invalid') {\n\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmodels.forEach(function ( model ) {\n\t\t\t\t\t\t\t\tmodel['$' + setName].apply(model, outerArgs);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn ctrl;\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.constant('VormValueType',{\n\t\t\tSINGLE: 'single',\n\t\t\tLIST: 'list',\n\t\t\tNAMED: 'named'\n\t\t});\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('ngModel', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'ngModel', '^?vormField', '^?vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tvar [ ngModel, vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vormField || vorm) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!vormField) {\n\t\t\t\t\t\t\tvormField = new VormFieldCtrl(attrs.ngModel, element[0]);\n\t\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.addModel(ngModel);\n\t\t\t\t\t\t\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvormField.removeModel(ngModel);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormChange', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tlink: function ( scope, element, attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar cb;\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormChange);\n\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( event, name ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$event: event,\n\t\t\t\t\t\t\t$name: name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telement.bind('viewchange', handleChange);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormField', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar name = $scope.$eval($attrs.vormField) || $attrs.ngModel;\n\t\t\t\t\t\n\t\t\t\t\tangular.extend(this, new VormFieldCtrl(name, $element[0]));\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormField',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tvar [ vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldTemplate', [ 'vormTemplateService', 'VormValueType', function ( vormTemplateService, VormValueType ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormFieldTemplate', 'vormField', 'vormModelList' ],\n\t\t\t\ttemplate: vormTemplateService.getDefaultTemplate(),\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tconfig = $scope.$eval($attrs.config) || {},\n\t\t\t\t\t\tcompiler,\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormModelList;\n\t\t\t\t\t\n\t\t\t\t\tconfig = _.defaults(angular.copy(config), { \n\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\ttype: $attrs.type,\n\t\t\t\t\t\tlabel: $attrs.label,\n\t\t\t\t\t\ttemplate: $scope.$eval($attrs.label)\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(!config.name || !config.type) {\n\t\t\t\t\t\tthrow new Error('Missing one of required arguments: name, type ');\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tcompiler = vormTemplateService.getModelCompiler(config.type, config.modelTemplate);\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\tvormModelList = controllers[1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setName(config.name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(config.limit > 1) {\n\t\t\t\t\t\t\tvormField.setValueType(VormValueType.LIST);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormModelList.addDelegate();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\t\treturn config.label;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getModelCompiler = function ( ) {\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputData = function ( ) {\n\t\t\t\t\t\treturn config.data;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldTemplate',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormForm', [ function ( ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'form' ],\n\t\t\t\tcontroller: [ '$element', function ( $element ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tfields = [],\n\t\t\t\t\t\tchangeListeners = [],\n\t\t\t\t\t\tsubmitListeners = [],\n\t\t\t\t\t\tvalues = {};\n\t\t\t\t\t\t\n\t\t\t\t\tfunction recalc ( ) {\n\t\t\t\t\t\tvalues = _(fields)\n\t\t\t\t\t\t\t.indexBy(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getName();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.mapValues(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getValue();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.value();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tObject.freeze(values);\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( ) {\n\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(changeListeners, function ( listener ) {\n\t\t\t\t\t\t\tlistener.apply(ctrl, outerArgs);\t\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction handleModelChange ( ) {\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.addField = function ( field ) {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\tfield.viewChangeListeners.push(handleChange);\n\t\t\t\t\t\tfield.modelChangeListeners.push(handleModelChange);\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeField = function ( field ) {\n\t\t\t\t\t\t_.pull(fields, field);\n\t\t\t\t\t\t_.pull(field.viewChangeListeners, handleChange);\n\t\t\t\t\t\t_.pull(field.modelChangeListeners, handleModelChange);\n\t\t\t\t\t\trecalc();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn fields;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValues = function ( ) {\n\t\t\t\t\t\treturn values;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.changeListeners = changeListeners;\n\t\t\t\t\tctrl.submitListeners = submitListeners;\n\t\t\t\t\t\n\t\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\t\tvar capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\t\treturn fields[method](function ( field ) {\n\t\t\t\t\t\t\t\treturn field[getName]();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!(type === 'valid' || type === 'invalid')) {\n\t\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfields.forEach(function ( field ) {\n\t\t\t\t\t\t\t\t\tfield[setName].apply(field, outerArgs);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$element.bind('submit', function ( ) {\n\t\t\t\t\t\t_.invoke(submitListeners, 'call', null, values);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn ctrl;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormForm'\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormInput', [ function ( ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ '^?vormFieldTemplate' ],\n\t\t\t\tscope: {\n\t\t\t\t\t'modelDelegate': '&',\n\t\t\t\t\t'config': '&',\n\t\t\t\t\t'type': '&'\n\t\t\t\t},\n\t\t\t\tcontrollerAs: 'vormInput',\n\t\t\t\tlink: function ( scope, element, attrs, controllers, transclude ) {\n\t\t\t\t\t\n\t\t\t\t\tvar [ vormFieldTemplate ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vormFieldTemplate) {\n\t\t\t\t\t\telement.replaceWith(vormFieldTemplate.getModelCompiler()(scope));\n\t\t\t\t\t} else if(transclude) {\n\t\t\t\t\t\ttransclude(function(clone) {\n\t\t\t\t\t\t  \telement.replaceWith(clone);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('vormInput needs either a transclude function or vormFieldGenerator.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormModelList', [ 'ModelDelegate', function ( ModelDelegate ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tdelegates = [];\n\t\t\t\t\t\n\t\t\t\t\tctrl.getDelegates = function ( ) {\n\t\t\t\t\t\treturn delegates;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.clearDelegate = function ( delegate ) {\n\t\t\t\t\t\tif(delegates.length === 1) {\n\t\t\t\t\t\t\tdelegate.value = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_.pull(delegates, delegate);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.addDelegate = function ( name ) {\n\t\t\t\t\t\tvar delegate;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!name) {\n\t\t\t\t\t\t\tname = delegates.length.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tdelegate = new ModelDelegate(name);\n\t\t\t\t\t\tdelegates.push(delegate);\n\t\t\t\t\t};\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormModelList'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormSubmit', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tvar [ vorm ] = controllers,\n\t\t\t\t\t\tcb;\n\t\t\t\t\t\n\t\t\t\t\tfunction handleSubmit ( ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$values: vorm.getValues()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormSubmit);\n\t\t\t\t\t\n\t\t\t\t\telement.bind('submit', handleSubmit);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.provider('vormTemplateService', [ function ( ) {\n\t\t\t\n\t\t\tvar vormTemplateService = {},\n\t\t\t\tdefaultWrapper,\n\t\t\t\tmodelTemplates = {},\n\t\t\t\tmodelCompilers = {},\n\t\t\t\twrapper;\n\t\t\t\t\n\t\t\tdefaultWrapper = `\n\t\t\t\t<div class=\"vorm-field\"\n\t\t\t\t\tng-class=\"vormField.getClassObj()\"\n\t\t\t\t\tvorm-field\n\t\t\t\t\tvorm-model-list\n\t\t\t\t>\n\t\t\t\t\t<div class=\"vorm-field-label\">\n\t\t\t\t\t\t{{vormFieldTemplate.getLabel()}}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<ul class=\"vorm-input-list\">\n\t\t\t\t\t\t<li class=\"vorm-input\" ng-repeat=\"model in vormModelList.getDelegates()\">\n\t\t\t\t\t\t\t<vorm-input data-type=\"vormFieldTemplate.getInputType()\" data-config=\"vormFieldTemplate.getInputData()\" model-delegate=\"model\"></vorm-input>\n\t\t\t\t\t\t\t<button class=\"vorm-input-clear\" type=\"button\" ng-click=\"vormModelList.clearDelegate(model)\">\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"vorm-field-status\">\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t\n\t\t\tmodelTemplates.text = `<input type=\"text\" placeholder=\"{{vormFieldTemplate.getPlaceholder()}}\"/>`;\n\t\t\t\t\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\t$get: function ( $compile ) {\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultTemplate = function ( ) {\n\t\t\t\t\t\treturn defaultWrapper;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getModelCompiler = function ( type, template ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar compiler;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(template) {\n\t\t\t\t\t\t\tcompiler = $compile(template);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcompiler = modelCompilers[type];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!compiler) {\n\t\t\t\t\t\t\tthrow new Error(`Model template for ${type} not found`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tmodelCompilers = _.mapValues(modelTemplates, function ( tpl ) {\n\t\t\t\t\t\tvar el = angular.element(tpl);\n\t\t\t\t\t\tel.attr('ng-model', 'model.value');\n\t\t\t\t\t\treturn $compile(el);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn vormTemplateService;\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t$inject: [ '$compile' ]\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n"],"sourceRoot":"/source/"}