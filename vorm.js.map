{"version":3,"sources":["_.js","VormEvent.js","VormFieldCtrl.js","VormModelDelegate.js","VormValueScope.js","VormValueType.js","ngModel.js","vormChange.js","vormControl.js","vormControlList.js","vormDelegateButton.js","vormDisplay.js","vormField.js","vormFieldConfig.js","vormFieldTemplate.js","vormFieldWrapper.js","vormFieldset.js","vormFocusableList.js","vormForm.js","vormInvoke.js","vormLabel.js","vormSubmit.js","vormTemplateService.js","types/checkboxList.js","types/input.js","types/radio.js","types/select.js","types/textarea.js"],"names":["angular","module","factory","$document","$window","VormEvent","undefined","CustomEvent","type","data","detail","bubbles","error","event","createEvent","initCustomEvent","$rootScope","VormValueType","VormValueScope","name","element","getDefaultValue","defaults","valueType","SINGLE","LIST","NAMED","setModelValue","model","value","$viewChangeListeners","$modelValue","$$writeModelToScope","listeners","applyValueToControls","valueScope","models","_","each","index","modelsToChange","concat","val","key","find","$name","pull","getModelValue","pluck","handleViewChange","ctrl","triggerViewChange","handleFormatterCall","modelValue","triggerModelChange","viewChangeListeners","modelChangeListeners","prefix","required","dispatchEvent","invoke","getName","setName","arguments","addModel","push","$formatters","removeModel","getModels","getValue","getValueType","setValueType","indexOf","Error","setValue","setEmpty","isRequired","setRequired","r","isEmpty","every","$isEmpty","$viewValue","setValueScope","scope","$destroy","getValueScope","chain","split","map","zipObject","mapValues","m","substr","length","capitalize","getClassObj","forEach","capitalized","propertyName","method","outerArgs","apply","delegate","ngModel","setNgModel","unsetNgModel","getNgModel","clearViewValue","$setViewValue","$render","getViewValue","$new","constant","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","err","TypeError","directive","VormFieldCtrl","require","compile","attrs","controllers","_controllers","vormField","vorm","addField","$on","removeField","$parse","link","handleChange","cb","$event","vormChange","bind","matchesFuncName","createElement","restrict","controller","$scope","$element","$attrs","vormFieldConfig","vormFocusableList","vormFieldTemplate","this","inputId","Math","random","toString","slice","invokeData","getData","getConfig","addId","getModelCompiler","clonedElement","focusable","selector","replace","$eval","replaceWith","className","querySelector","attr","getInputId","$$postDigest","getDisplayMode","getOptions","version","minor","options","nwOpts","equals","removeId","controllerAs","VormModelDelegate","triggerAsyncViewChange","callback","unwatch","$watchCollection","setFocus","id","getId","el","getElementById","focus","createDelegate","delegates","limit","NaN","$watch","getLimit","setLimit","keys","getDelegates","clearDelegate","l","Number","reachedLimit","isClearButtonVisible","handleCreateClick","handleClearClick","splice","shift","template","vormControlList","handleClick","isDisabled","isVisible","getLabel","config","typeOptions","addLabel","vormTemplateService","vormControl","compiler","display","getDisplayCompiler","append","extend","vormInvoke","getValues","values","vormForm","invokable","$values","invokeExpr","expr","disabled","wrapperEl","getDefaultTemplate","querySelectorAll","getDefaultControlTemplate","outerHTML","copy","label","modelTemplate","wrapped","transclude","vals","getFields","fields","field","when","ids","changeListeners","listener","getFieldByName","submitListeners","indexBy","toUpperCase","$injector","locals","last","$inject","invoker","handleSubmit","vormSubmit","provider","modifyModelTemplates","processor","templates","modifyDisplayTemplates","modifyTemplate","processedEl","wrapperTemplate","modifyControlTemplate","wrapper","controlTemplate","innerHTML","registerType","displayTemplate","compilers","null","$get","$compile","getCompiler","controlType","pool","modelEl","some","childEl","hasAttribute","vormTemplateServiceProvider","placeholder","includes"],"mappings":"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","file":"vorm.js","sourcesContent":["/*global require*/\n(function ( ) {\n\t\n\tangular.module('vorm', []);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormEvent', [ '$document', '$window', function ( $document, $window ) {\n\t\t\t\n\t\t\tlet VormEvent;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst event = new $window.CustomEvent('foo'); // jshint ignore:line\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\treturn new $window.CustomEvent(type, {\n\t\t\t\t\t\tdetail: data,\n\t\t\t\t\t\tbubbles: true\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t} catch ( error ) {\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\tconst event = $document[0].createEvent('CustomEvent');\n\t\t\t\t\tevent.initCustomEvent(type, true, true, data);\n\t\t\t\t\treturn event;\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\treturn VormEvent;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormFieldCtrl', [ '$rootScope', 'VormEvent', 'VormValueType', 'VormValueScope', function ( $rootScope, VormEvent, VormValueType, VormValueScope ) {\n\t\t\t\n\t\t\treturn function ( name, element ) {\n\t\t\t\t\n\t\t\t\tconst ctrl = {},\n\t\t\t\t\tmodels = [],\n\t\t\t\t\tviewChangeListeners = [],\n\t\t\t\t\tmodelChangeListeners = [],\n\t\t\t\t\tprefix = 'vorm-field-';\n\t\t\t\t\n\t\t\t\tlet valueType = VormValueType.SINGLE,\n\t\t\t\t\trequired,\n\t\t\t\t\tvalueScope = new VormValueScope();\n\t\t\t\t\n\t\t\t\tfunction getDefaultValue ( ) {\n\t\t\t\t\tlet defaults;\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tdefaults = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tdefaults = [ null ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tdefaults = {};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn defaults;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction setModelValue ( model, value ) {\n\t\t\t\t\t// $$writeModelToScope calls the view listeners\n\t\t\t\t\t// and we don't really want that\n\t\t\t\t\tconst { $viewChangeListeners, $modelValue } = model;\n\t\t\t\t\t\t\n\t\t\t\t\tmodel.$viewChangeListeners = [];\n\t\t\t\t\tmodel.$modelValue = value;\n\t\t\t\t\tmodel.$$writeModelToScope();\n\t\t\t\t\t\n\t\t\t\t\t// reset all the things\n\t\t\t\t\tmodel.listeners = $viewChangeListeners;\n\t\t\t\t\tmodel.$modelValue = $modelValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction applyValueToControls ( ) {\n\t\t\t\t\tvar value = valueScope[name];\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tif(models[0]) {\n\t\t\t\t\t\t\tsetModelValue(models[0], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\t_.each(models, function ( model, index ) {\n\t\t\t\t\t\t\tsetModelValue(model, value[index]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tconst modelsToChange = models.concat();\n\t\t\t\t\t\t_.each(value, function ( val, key ) {\n\t\t\t\t\t\t\tvar model = _.find(models, { $name: key });\n\t\t\t\t\t\t\tif(model) {\n\t\t\t\t\t\t\t\tsetModelValue(model, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_.pull(modelsToChange, model);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(modelsToChange, function ( model ) {\n\t\t\t\t\t\t\tsetModelValue(model, undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction getModelValue ( ) {\n\t\t\t\t\tlet value;\n\t\t\t\t\t\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tvalue = models[0] ? models[0].$modelValue : undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tvalue = _.pluck(models, '$modelValue');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t\t_.each(models, function ( model) {\n\t\t\t\t\t\t\tvalue[model.$name] = model.$modelValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleViewChange ( ) {\n\t\t\t\t\t// value changes from view\n\t\t\t\t\tvalueScope[name] = getModelValue();\n\t\t\t\t\tctrl.triggerViewChange();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleFormatterCall ( value ) {\n\t\t\t\t\t// value changes from model\n\t\t\t\t\tlet modelValue = getModelValue();\n\t\t\t\t\tvalueScope[name] = modelValue;\n\t\t\t\t\tctrl.triggerModelChange();\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tctrl.triggerModelChange = function ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('modelchange', { name: name } ));\n\t\t\t\t\t_.invoke(modelChangeListeners, 'call', null, name);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.triggerViewChange = function ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('viewchange', { name: name } ));\n\t\t\t\t\t_.invoke(viewChangeListeners, 'call', null, name);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setName = function ( ) {\n\t\t\t\t\tname = arguments[0];\n\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\tctrl.addModel = function ( model ) {\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tmodel.$viewChangeListeners.push(handleViewChange);\n\t\t\t\t\tmodel.$formatters.push(handleFormatterCall);\n\t\t\t\t\tvalueScope[name] = getModelValue();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.removeModel = function ( model ) {\n\t\t\t\t\t_.pull(models, model);\n\t\t\t\t\t_.pull(model.$viewChangeListeners, handleViewChange);\n\t\t\t\t\t_.pull(model.$formatters, handleFormatterCall);\n\t\t\t\t\tvalueScope[name] = getModelValue();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getModels = function ( ) {\n\t\t\t\t\treturn models;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValue = function ( ) {\n\t\t\t\t\treturn valueScope[name];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValueType = function ( ) {\n\t\t\t\t\treturn valueType;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueType = function ( type ) {\n\t\t\t\t\tif([ VormValueType.SINGLE, VormValueType.LIST, VormValueType.NAMED ].indexOf(type) === -1) {\n\t\t\t\t\t\tthrow new Error('Unsupported VormValueType: ' + VormValueType);\n\t\t\t\t\t}\n\t\t\t\t\tvalueType = type;\n\t\t\t\t\tvalueScope[name] = getDefaultValue();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValue = function ( value ) {\n\t\t\t\t\tvalueScope[name] = value;\n\t\t\t\t\tapplyValueToControls();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setEmpty = function ( ) {\n\t\t\t\t\tvalueScope[name] = getDefaultValue();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\treturn required;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setRequired = function ( r ) {\n\t\t\t\t\trequired = !!r;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isEmpty = function ( ) {\n\t\t\t\t\treturn models.every(function ( model ) {\n\t\t\t\t\t\treturn model.$isEmpty(model.$viewValue);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueScope = function ( scope ) {\n\t\t\t\t\tlet val = valueScope[name];\n\t\t\t\t\tif(valueScope) {\n\t\t\t\t\t\tvalueScope.$destroy();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvalueScope = scope;\n\t\t\t\t\tvalueScope[name] = val;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValueScope = function ( ) {\n\t\t\t\t\treturn valueScope;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet chain = _('valid invalid dirty pristine touched untouched required empty'.split(' '))\n\t\t\t\t\t\t.map(function ( key ) {\n\t\t\t\t\t\t\treturn prefix + key;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.zipObject()\n\t\t\t\t\t\t.mapValues(function ( value, key ) {\n\t\t\t\t\t\t\tlet m = key.substr(prefix.length);\n\t\t\t\t\t\t\treturn ctrl['is' + _.capitalize(m)]();\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\tctrl.getClassObj = function ( ) {\n\t\t\t\t\treturn chain.value();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setEmpty();\n\t\t\t\t\n\t\t\t\tctrl.viewChangeListeners = viewChangeListeners;\n\t\t\t\tctrl.modelChangeListeners = modelChangeListeners;\n\t\t\t\n\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\tconst capitalized = _.capitalize(type),\n\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\tpropertyName = '$' + type,\n\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\n\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\treturn models[method](function ( model ) {\n\t\t\t\t\t\t\treturn model[propertyName];\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(type !== 'valid' && type !== 'invalid') {\n\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmodels.forEach(function ( model ) {\n\t\t\t\t\t\t\t\tmodel['$' + setName].apply(model, outerArgs);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvalueScope[name] = getDefaultValue();\n\t\t\t\t\n\t\t\t\treturn ctrl;\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\r\n(function ( ) {\r\n\t\r\n\tangular.module('vorm')\r\n\t\t.factory('VormModelDelegate', [ function ( ) {\r\n\t\t\t\r\n\t\t\treturn function ( name ) {\r\n\t\t\t\t\r\n\t\t\t\tconst delegate = {};\r\n\t\t\t\tlet ngModel = null;\r\n\t\t\t\t\r\n\t\t\t\tdelegate.value = null;\r\n\t\t\t\t\r\n\t\t\t\tdelegate.getName = function ( ) {\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tdelegate.setNgModel = function ( model ) {\r\n\t\t\t\t\tngModel = model;\r\n\t\t\t\t\tif(ngModel) {\r\n\t\t\t\t\t\tngModel.$name = name;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tdelegate.unsetNgModel = function ( ) {\r\n\t\t\t\t\tngModel = null;\t\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tdelegate.getNgModel = function ( ) {\r\n\t\t\t\t\treturn ngModel;\t\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tdelegate.clearViewValue = function ( ) {\r\n\t\t\t\t\tngModel.$setViewValue(null);\r\n\t\t\t\t\tngModel.$render();\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tdelegate.getViewValue = function ( ) {\r\n\t\t\t\t\treturn ngModel ? ngModel.$viewValue : delegate.value;\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn delegate;\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t}]);\r\n\t\r\n})();\r\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormValueScope', [ '$rootScope', function ( $rootScope ) {\n\t\t\t\n\t\t\treturn function ( ) {\n\t\t\t\t\n\t\t\t\tconst scope = $rootScope.$new();\n\t\t\t\t\n\t\t\t\treturn scope;\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.constant('VormValueType',{\n\t\t\tSINGLE: 'single',\n\t\t\tLIST: 'list',\n\t\t\tNAMED: 'named'\n\t\t});\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('ngModel', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'ngModel', '^?vormField', '^?vormForm' ],\n\t\t\t\tcompile: function ( ) {\n\t\t\t\t\treturn function link ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\t\tlet [ ngModel, vormField, vorm ] = controllers;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormField || vorm) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!vormField) {\n\t\t\t\t\t\t\t\tvormField = new VormFieldCtrl(attrs.name || attrs.ngModel, element[0]);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvormField.addModel(ngModel);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tvormField.removeModel(ngModel);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormChange', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tlink: function ( scope, element, attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst cb = $parse(attrs.vormChange);\n\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( event, name ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$event: event,\n\t\t\t\t\t\t\t$name: event.detail ? event.detail.name : name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telement.bind('viewchange', handleChange);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormControl', [ '$document', function ( $document ) { \n\t\t\t\n\t\t\tlet matchesFuncName = (function ( ) {\n\t\t\t\t\n\t\t\t\tlet element = $document[0].createElement('div');\n\t\t\t\t\n\t\t\t\treturn _([ '', 'ms', 'moz', 'webkit'])\n\t\t\t\t\t.map(function ( prefix ) {\n\t\t\t\t\t\treturn (prefix ? (prefix + 'MatchesSelector') : 'matches');\n\t\t\t\t\t})\n\t\t\t\t\t.find(function ( name ) {\n\t\t\t\t\t\treturn name in element;\n\t\t\t\t\t});\n\t\t\t})();\n\t\t\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormControl', '^vormField', '^vormFieldConfig', '^vormFocusableList', '^vormFieldTemplate' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormFieldConfig,\n\t\t\t\t\t\tvormFocusableList,\n\t\t\t\t\t\tvormFieldTemplate,\n\t\t\t\t\t\tinputId = Math.random().toString(36).slice(2);\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\tvormFieldConfig = controllers[1];\n\t\t\t\t\t\tvormFocusableList = controllers[2];\n\t\t\t\t\t\tvormFieldTemplate = controllers[3];\n\t\t\t\t\t\t\n\t\t\t\t\t\tctrl.invokeData = vormFieldConfig.invokeData;\n\t\t\t\t\t\tctrl.getData = vormFieldConfig.getData;\n\t\t\t\t\t\tctrl.getConfig = vormFieldConfig.getConfig;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFocusableList.addId(inputId);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFieldTemplate.getModelCompiler()($scope, function ( clonedElement ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet focusable,\n\t\t\t\t\t\t\t\tselector = 'input,keygen,meter,output,progress,select,textarea',\n\t\t\t\t\t\t\t\treplace = $element.find('vorm-control-replace'),\n\t\t\t\t\t\t\t\tdelegate = $scope.$eval($attrs.delegate);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treplace.replaceWith(clonedElement);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclonedElement[0].className += ' ' + replace[0].className;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(clonedElement[0][matchesFuncName](selector)) {\n\t\t\t\t\t\t\t\tfocusable = clonedElement;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfocusable = angular.element(clonedElement[0].querySelector(selector));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfocusable.attr('id', ctrl.getInputId());\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$scope.$$postDigest(function ( ) {\n\t\t\t\t\t\t\t\tdelegate.setNgModel(clonedElement.controller('ngModel'));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$scope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tdelegate.unsetNgModel();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isRequired = function ( ) {\n\t\t\t\t\t\treturn vormField && vormField.isRequired();\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputId = function ( ) {\n\t\t\t\t\t\treturn inputId;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getViewValue = function ( ) {\n\t\t\t\t\t\treturn $scope.$eval($attrs.delegate).getViewValue();\t\n\t\t\t\t\t};\n\t\t\t\t\t\t\t\n\t\t\t\t\tctrl.getDisplayMode = function ( ) {\n\t\t\t\t\t\treturn vormFieldConfig.getDisplayMode();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(angular.version.minor >= 4) {\n\t\t\t\t\t\t// dynamic options throws an error in <=1.3.x\n\t\t\t\t\t\t// fixed in 1.4.x\n\t\t\t\t\t\t// https://github.com/angular/angular.js/pull/10639\n\t\t\t\t\t\tctrl.getOptions = function ( ) {\n\t\t\t\t\t\t\treturn ctrl.invokeData('options');\t\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctrl.getOptions = (function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet options;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn function ( ) {\n\t\t\t\t\t\t\t\tconst nwOpts = ctrl.invokeData('options');\n\t\t\t\t\t\t\t\tif(options !== nwOpts && !angular.equals(options,nwOpts)) {\n\t\t\t\t\t\t\t\t\toptions = nwOpts;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn options;\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$scope.$on('$destroy', function ( ) {\n\t\t\t\t\t\tvormFocusableList.removeId(inputId);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormControl',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\n\tangular.module('vorm')\n\t\t.directive('vormControlList', [  'VormModelDelegate', '$document', function ( VormModelDelegate, $document ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormControlList', '^vormFieldConfig', '^?vormFocusableList', '^vormField' ],\n\t\t\t\trestrict: 'E',\n\t\t\t\tcontroller: [ '$scope', function ( $scope ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tdelegates = [],\n\t\t\t\t\t\tlimit = NaN,\n\t\t\t\t\t\tvormFieldConfig,\n\t\t\t\t\t\tvormFocusableList,\n\t\t\t\t\t\tvormField;\n\t\t\t\t\t\t\n\t\t\t\t\tfunction triggerAsyncViewChange ( callback ) {\n\t\t\t\t\t\tlet unwatch = $scope.$watchCollection(vormField.getModels, function ( ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvormField.triggerViewChange();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tunwatch();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction setFocus ( ) {\n\t\t\t\t\t\tif(vormFocusableList) {\n\t\t\t\t\t\t\tlet id = vormFocusableList.getId(),\n\t\t\t\t\t\t\t\tel = $document[0].getElementById(id);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(el) {\n\t\t\t\t\t\t\t\tel.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction createDelegate ( name ) {\n\t\t\t\t\t\tlet delegate,\n\t\t\t\t\t\t\tvalue;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdelegate = new VormModelDelegate(name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch(vormField.getValueType()) {\n\t\t\t\t\t\t\tcase 'list':\n\t\t\t\t\t\t\tvalue = vormField.getValue()[delegates.length];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'named':\n\t\t\t\t\t\t\tvalue = vormField.getValue()[name];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'single':\n\t\t\t\t\t\t\tvalue = vormField.getValue();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tdelegate.value = value;\n\t\t\t\t\t\tdelegates.push(delegate);\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFieldConfig = controllers[0];\n\t\t\t\t\t\tvormFocusableList = controllers[1];\n\t\t\t\t\t\tvormField = controllers[2];\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.$watch(vormFieldConfig.getLimit, function ( limit ) {\n\t\t\t\t\t\t\tctrl.setLimit(limit);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.$watchCollection(function ( ) {\n\t\t\t\t\t\t\tlet keys,\n\t\t\t\t\t\t\t\tval = vormField.getValue();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitch(vormField.getValueType()) {\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tkeys = _.keys(val);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase 'single':\n\t\t\t\t\t\t\t\tkeys = null;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn keys;\n\t\t\t\t\t\t}, function ( keys ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdelegates = [];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!keys) {\n\t\t\t\t\t\t\t\tcreateDelegate();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t_.each(keys, function ( key ) {\n\t\t\t\t\t\t\t\tcreateDelegate(key);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getDelegates = function ( ) {\n\t\t\t\t\t\treturn delegates;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.clearDelegate = function ( delegate ) {\n\t\t\t\t\t\tdelegate.clearViewValue();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLimit = function ( ) {\n\t\t\t\t\t\treturn limit;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.setLimit = function ( l ) {\n\t\t\t\t\t\tlimit = Number(l);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.reachedLimit = function ( ) {\n\t\t\t\t\t\treturn limit > 0 && delegates.length >= limit;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isClearButtonVisible = function ( ) {\n\t\t\t\t\t\treturn vormField.getValueType() === 'list';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.handleCreateClick = function ( ) {\n\t\t\t\t\t\tvormField.setValue(vormField.getValue().concat(null));\n\t\t\t\t\t\ttriggerAsyncViewChange(setFocus);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.handleClearClick = function ( delegate ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(delegates.length === 1) {\n\t\t\t\t\t\t\tdelegate.clearViewValue();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet value = vormField.getValue(),\n\t\t\t\t\t\t\t\tindex = _.find(vormField.getModels(), { model: delegate.getNgModel() });\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvalue.splice(index, 1);\n\t\t\t\t\t\t\tvormField.setValue(value);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttriggerAsyncViewChange(setFocus);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormControlList',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormDelegateButton', [ function ( ) {\n\t\t\n\t\treturn {\n\t\t\trequire: [ 'vormDelegateButton', '^vormFieldConfig', '^vormControlList', '^vormField' ],\n\t\t\ttemplate: \n\t\t\t'<button class=\"vorm-delegate-button\" type=\"button\" ng-click=\"vormDelegateButton.handleClick()\" ng-disabled=\"vormDelegateButton.isDisabled()\" ng-show=\"vormDelegateButton.isVisible()\">' +\n\t\t\t\t'{{vormDelegateButton.getLabel()}}' + \n\t\t\t'</button>',\n\t\t\treplace: true,\n\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\n\t\t\t\tlet ctrl = this,\n\t\t\t\t\tvormFieldConfig,\n\t\t\t\t\tvormControlList,\n\t\t\t\t\tvormField;\n\t\t\t\t\n\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\tvormFieldConfig = controllers[0];\n\t\t\t\t\tvormControlList = controllers[1];\n\t\t\t\t\tvormField = controllers[2];\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.handleClick = function ( ) {\n\t\t\t\t\tvormControlList.handleCreateClick();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isDisabled = function ( ) {\n\t\t\t\t\treturn vormControlList.reachedLimit();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.isVisible = function ( ) {\n\t\t\t\t\treturn vormField.getValueType() === 'list';\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\tlet config = vormFieldConfig.getConfig(),\n\t\t\t\t\t\ttypeOptions = config ? config.valueType : null,\n\t\t\t\t\t\taddLabel = typeOptions && typeOptions.addLabel ? vormFieldConfig.invoke(typeOptions.addLabel) : '';\n\t\t\t\t\t\n\t\t\t\t\treturn addLabel;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t}],\n\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\n\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t\n\t\t\t},\n\t\t\tcontrollerAs: 'vormDelegateButton'\n\t\t};\n\t\t\n\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormDisplay', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormDisplay', '^vormControl', '^vormFieldConfig' ],\n\t\t\t\tcontroller: [ '$scope', '$element', function ( $scope, $element ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tvormControl,\n\t\t\t\t\t\tvormFieldConfig;\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet template,\n\t\t\t\t\t\t\tcompiler,\n\t\t\t\t\t\t\tconfig;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormControl = controllers[0];\n\t\t\t\t\t\tvormFieldConfig = controllers[1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tconfig = vormFieldConfig.getConfig();\n\t\t\t\t\t\t\n\t\t\t\t\t\ttemplate = config.template ? config.template.display : null;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcompiler = vormTemplateService.getDisplayCompiler(config.type, template);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcompiler($scope, function ( clonedElement ) {\n\t\t\t\t\t\t\t$element.append(clonedElement);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tctrl.getViewValue = vormControl.getViewValue;\n\t\t\t\t\t\tctrl.getModelValue = vormControl.getModelValue;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormDisplay',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormField', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tconst name = $scope.$eval($attrs.vormField) || $attrs.name || $attrs.ngModel,\n\t\t\t\t\t\tctrl = this;\n\t\t\t\t\t\t\n\t\t\t\t\tangular.extend(ctrl, new VormFieldCtrl(name, $element[0]));\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tconst [ vorm ] = controllers;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\t\tvorm.addField(ctrl);\n\t\t\t\t\t\t\t$scope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tvorm.removeField(ctrl);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormField',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldConfig', [ 'vormInvoke', function ( vormInvoke ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormFieldConfig', 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tconfig = $scope.$eval($attrs.vormFieldConfig),\n\t\t\t\t\t\tvormField,\n\t\t\t\t\t\tvormForm;\n\t\t\t\t\t\t\n\t\t\t\t\tfunction getValues ( ) {\n\t\t\t\t\t\tlet values;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormForm) {\n\t\t\t\t\t\t\tvalues = vormForm.getValues();\n\t\t\t\t\t\t} else if(vormField) {\n\t\t\t\t\t\t\tvalues = {};\n\t\t\t\t\t\t\tvalues[vormField.getName()] = vormField.getValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn values;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormField = controllers[0];\n\t\t\t\t\t\tvormForm = controllers[1];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.setName(config.name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(config.valueType !== undefined) {\n\t\t\t\t\t\t\tif(typeof config.valueType === 'string') {\n\t\t\t\t\t\t\t\tvormField.setValueType(config.valueType);\n\t\t\t\t\t\t\t} else if(config.valueType.type !== undefined) {\n\t\t\t\t\t\t\t\tvormField.setValueType(config.valueType.type);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(_.isArray(config.required) || typeof config.required === 'function') {\n\t\t\t\t\t\t\t$scope.$watch(function ( ) {\n\t\t\t\t\t\t\t\t\treturn ctrl.invoke(config.required);\n\t\t\t\t\t\t\t\t}, function ( isRequired ) {\n\t\t\t\t\t\t\t\tvormField.setRequired(!!isRequired);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvormField.setRequired(config.required || false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(config.defaults) {\n\t\t\t\t\t\t\tvormField.setValue(ctrl.invoke(config.defaults));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.invoke = function ( invokable ) {\n\t\t\t\t\t\treturn vormInvoke(invokable, {\n\t\t\t\t\t\t\t$values: getValues()\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.invokeExpr = function ( invokable ) {\n\t\t\t\t\t\treturn vormInvoke.expr(invokable, {\n\t\t\t\t\t\t\t$values: getValues()\n\t\t\t\t\t\t}, vormField.getValueScope());\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getConfig = function ( ) {\n\t\t\t\t\t\treturn config;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.invokeData = function ( key ) {\n\t\t\t\t\t\treturn ctrl.invoke(config.data[key]);\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLimit = function ( ) {\n\t\t\t\t\t\tvar limit = 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormField.getValueType() === 'list') {\n\t\t\t\t\t\t\tlimit = -1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(config.valueType && config.valueType.limit !== undefined) {\n\t\t\t\t\t\t\t\tlimit = ctrl.invoke(config.valueType.limit);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn limit;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getDisplayMode = function ( ) {\n\t\t\t\t\t\treturn ctrl.invokeExpr(config.disabled) ? 'display' : 'edit';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldConfig',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldTemplate', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\tlet wrapperEl = angular.element(vormTemplateService.getDefaultTemplate());\n\t\t\t\n\t\t\tangular.element(wrapperEl[0].querySelectorAll('vorm-replace')).replaceWith(vormTemplateService.getDefaultControlTemplate());\n\t\t\t\n\t\t\twrapperEl.attr('vorm-field-config', 'vormFieldTemplate.getConfig()');\n\t\t\twrapperEl.attr('vorm-focusable-list', '');\n\t\t\t\t\n\t\t\tconst template = wrapperEl[0].outerHTML;\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trestrict: 'E',\n\t\t\t\ttemplate: template,\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tconfig = $scope.$eval($attrs.config) || {},\n\t\t\t\t\t\tcompiler;\n\t\t\t\t\t\n\t\t\t\t\tconfig = _.defaults(angular.copy(config), { \n\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\ttype: $attrs.type,\n\t\t\t\t\t\tlabel: $attrs.label,\n\t\t\t\t\t\ttemplate: $scope.$eval($attrs.template),\n\t\t\t\t\t\trequired: $scope.$eval($attrs.required),\n\t\t\t\t\t\tdata: $scope.$eval($attrs.data) || {}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(!config.name || !config.type) {\n\t\t\t\t\t\tthrow new Error('Missing one of required arguments: name, type ');\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tcompiler = vormTemplateService.getModelCompiler(config.type, config.modelTemplate);\n\t\t\t\t\t\n\t\t\t\t\tctrl.getConfig = function ( ) {\n\t\t\t\t\t\treturn config;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getModelCompiler = function ( ) {\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldTemplate'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldWrapper', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\tlet wrapped = angular.element(vormTemplateService.getDefaultTemplate());\n\t\t\t\n\t\t\twrapped.find('vorm-replace').append('<ng-transclude></ng-transclude>');\n\t\t\twrapped.attr('vorm-field-config', 'vormFieldWrapper.getConfig()');\n\t\t\twrapped.attr('vorm-focusable-list', '');\n\t\t\t\n\t\t\tconst template = wrapped[0].outerHTML;\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\ttransclude: true,\n\t\t\t\ttemplate: template,\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$attrs', function ( $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\t\n\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\t\tlabel: $attrs.label\n\t\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getConfig = function ( ) {\n\t\t\t\t\t\treturn config;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldWrapper'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldset', [ 'vormInvoke', function ( vormInvoke ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\trequire: [ 'vormFieldset', '^?vormForm' ],\n\t\t\t\ttemplate: `\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<vorm-field-template config=\"field\" ng-repeat=\"field in vormFieldset.getFields() | filter:vormFieldset.isVisible:field\">\n\t\t\t\t\t\t</vorm-field-template>\n\t\t\t\t\t</fieldset>\n\t\t\t\t`,\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tvormForm,\n\t\t\t\t\t\tvalueScope;\n\t\t\t\t\t\n\t\t\t\t\tfunction getValues ( ) {\n\t\t\t\t\t\tlet vals = {};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(vormForm) {\n\t\t\t\t\t\t\tvals = vormForm.getValues();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn vals;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormForm = controllers[0];\n\t\t\t\t\t\tif(vormForm) {\n\t\t\t\t\t\t\tvalueScope = vormForm.getValueScope();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn $scope.$eval($attrs.fields);\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.isVisible = function ( field ) {\n\t\t\t\t\t\treturn field.when === null || field.when === undefined ? true : !!vormInvoke.expr(field.when, { $values: getValues() }, valueScope);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldset',\n\t\t\t\tlink: function ( scope, element, attrs, controllers  ) {\n\t\t\t\t\tcontrollers.shift().link(controllers);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFocusableList', [ function ( ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tcontroller: [ function ( ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tids = [];\n\t\t\t\t\t\n\t\t\t\t\tctrl.addId = function ( id ) {\n\t\t\t\t\t\tids.push(id);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeId = function ( id ) {\n\t\t\t\t\t\t_.pull(ids, id);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getId = function ( ) {\n\t\t\t\t\t\treturn ids[ids.length-1];\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}]\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormForm', [ 'VormValueScope', function ( VormValueScope ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'form' ],\n\t\t\t\tcontroller: [ '$element', function ( $element ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ctrl = this,\n\t\t\t\t\t\tfields = [],\n\t\t\t\t\t\tchangeListeners = [],\n\t\t\t\t\t\tsubmitListeners = [],\n\t\t\t\t\t\tvalueScope = new VormValueScope();\n\t\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( ) {\n\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(changeListeners, function ( listener ) {\n\t\t\t\t\t\t\tlistener.apply(ctrl, outerArgs);\t\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction getFieldByName ( name ) {\n\t\t\t\t\t\treturn _.find(fields, function ( field ) {\n\t\t\t\t\t\t\treturn field.getName() === name;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.addField = function ( field ) {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\tfield.viewChangeListeners.push(handleChange);\n\t\t\t\t\t\tfield.setValueScope(valueScope);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeField = function ( field ) {\n\t\t\t\t\t\t_.pull(fields, field);\n\t\t\t\t\t\t_.pull(field.viewChangeListeners, handleChange);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn fields;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValues = function ( ) {\n\t\t\t\t\t\tlet values = _(fields)\n\t\t\t\t\t\t\t.indexBy(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getName();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.mapValues(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getValue();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.value();\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn values;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValue = function ( name ) {\n\t\t\t\t\t\treturn getFieldByName(name).getValue();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.setValue = function ( name, value ) {\n\t\t\t\t\t\tgetFieldByName(name).setValue(value);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValueScope = function ( ) {\n\t\t\t\t\t\treturn valueScope;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.changeListeners = changeListeners;\n\t\t\t\t\tctrl.submitListeners = submitListeners;\n\t\t\t\t\t\n\t\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\t\tconst capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\t\treturn fields[method](function ( field ) {\n\t\t\t\t\t\t\t\treturn field[getName]();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!(type === 'valid' || type === 'invalid')) {\n\t\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\t\tconst outerArgs = arguments;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfields.forEach(function ( field ) {\n\t\t\t\t\t\t\t\t\tfield[setName].apply(field, outerArgs);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$element.bind('submit', function ( ) {\n\t\t\t\t\t\t_.invoke(submitListeners, 'call', null, ctrl.getValues());\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn ctrl;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormForm'\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('vormInvoke', [ '$injector', '$parse', function ( $injector, $parse ) {\n\t\t\t\n\t\t\tfunction invoke ( invokable, locals ) {\n\t\t\t\tlet value;\n\t\t\t\t\n\t\t\t\tif(!invokable) {\n\t\t\t\t\treturn invokable;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif((_.isArray(invokable) && typeof _.last(invokable) === 'function') || invokable.$inject !== undefined) {\n\t\t\t\t\tvalue = $injector.invoke(invokable, null, locals ? angular.copy(locals) : null);\n\t\t\t\t} else if(typeof invokable === 'function') {\n\t\t\t\t\tvalue = invokable();\n\t\t\t\t} else {\n\t\t\t\t\tvalue = invokable;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\t\n\t\t\tlet invoker = function ( invokable, locals ) {\n\t\t\t\treturn invoke(invokable,locals);\n\t\t\t};\n\t\t\t\n\t\t\tinvoker.expr = function ( invokable, locals, scope ) {\n\t\t\t\tlet value;\n\t\t\t\tif(typeof invokable === 'string') {\n\t\t\t\t\tvalue = $parse(invokable)(scope, locals);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = invoke(invokable, locals);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t};\n\t\t\t\n\t\t\treturn invoker;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormLabel', [ function ( ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormLabel', '^vormFieldConfig', '^vormFocusableList' ],\n\t\t\t\ttemplate: '<label class=\"vorm-field-label\">{{vormLabel.getLabel()}}</label>',\n\t\t\t\treplace: true,\n\t\t\t\tcontroller: [ '$scope', '$element', function ( $scope, $element ) {\n\t\t\t\t\t\n\t\t\t\t\tlet ctrl = this,\n\t\t\t\t\t\tvormFieldConfig,\n\t\t\t\t\t\tvormFocusableList;\n\t\t\t\t\t\n\t\t\t\t\tctrl.link = function ( controllers ) {\n\t\t\t\t\t\tvormFieldConfig = controllers[0];\n\t\t\t\t\t\tvormFocusableList = controllers[1];\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.$watch(vormFocusableList.getId, function ( inputId ) {\n\t\t\t\t\t\t\t$element.attr('for', inputId);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getLabel = function ( ) {\n\t\t\t\t\t\treturn vormFieldConfig.invoke(vormFieldConfig.getConfig().label);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormLabel',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tcontrollers[0].link(controllers.slice(1));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormSubmit', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tconst [ vorm ] = controllers;\n\t\t\t\t\tlet cb;\n\t\t\t\t\t\n\t\t\t\t\tfunction handleSubmit ( ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$values: vorm.getValues()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormSubmit);\n\t\t\t\t\t\n\t\t\t\t\telement.bind('submit', handleSubmit);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.provider('vormTemplateService', [ function ( ) {\n\t\t\t\n\t\t\tlet wrapperTemplate,\n\t\t\t\tcontrolTemplate,\n\t\t\t\tcompilers = { model: {}, display: {} },\n\t\t\t\ttemplates = { model: {}, display: { null: angular.element('<span>{{vormDisplay.getViewValue()}}</span>') } };\n\t\t\t\t\n\t\t\tconst vormTemplateService = {};\n\t\t\t\n\t\t\twrapperTemplate = \n\t\t\t\t'<div ng-class=\"vormField.getClassObj()\">' + \n\t\t\t\t\t'<vorm-label></vorm-label>' + \n\t\t\t\t\t'<vorm-replace></vorm-replace>' +\n\t\t\t\t'</div>';\n\t\t\t\t\n\t\t\tcontrolTemplate = \n\t\t\t\t'<vorm-control-list>' + \n\t\t\t\t\t'<vorm-control ng-repeat=\"delegate in vormControlList.getDelegates()\" delegate=\"delegate\">' + \n\t\t\t\t\t\t'<vorm-edit ng-show=\"vormControl.getDisplayMode()===\\'edit\\'\">' +\n\t\t\t\t\t\t\t'<vorm-control-replace></vorm-control-replace>' + \n\t\t\t\t\t\t\t'<button class=\"vorm-control-clear-button\" type=\"button\" ng-click=\"vormControlList.handleClearClick(delegate)\" ng-show=\"vormControlList.isClearButtonVisible()\">x</button>' + \n\t\t\t\t\t\t'</vorm-edit>' +\n\t\t\t\t\t\t'<vorm-display ng-show=\"vormControl.getDisplayMode()===\\'display\\'\"></vorm-display>' + \n\t\t\t\t\t'</vorm-control>' + \n\t\t\t\t\t'<vorm-delegate-button>' + \n\t\t\t\t\t'</vorm-delegate-button>' +\n\t\t\t\t'</vorm-control-list>';\n\t\t\t\n\t\t\tfunction modifyModelTemplates ( processor ) {\n\t\t\t\ttemplates.model = _.mapValues(templates.model, function ( template, type ) {\n\t\t\t\t\treturn processor(template, type);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tfunction modifyDisplayTemplates ( processor ) {\n\t\t\t\ttemplates.display = _.mapValues(templates.display, function ( template, type ) {\n\t\t\t\t\treturn processor(template, type);\n\t\t\t\t});\t\n\t\t\t}\n\t\t\t\n\t\t\tfunction modifyTemplate ( processor ) {\n\t\t\t\tconst processedEl = processor(angular.element(wrapperTemplate));\n\t\t\t\tprocessedEl.attr('vorm-field', '');\n\t\t\t\t\n\t\t\t\tprocessedEl.find('vorm-control').attr('limit', 'vormFieldConfig.getLimit()');\n\t\t\t\t\n\t\t\t\twrapperTemplate = processedEl[0].outerHTML;\n\t\t\t}\n\t\t\t\n\t\t\tfunction modifyControlTemplate ( processor ) {\n\t\t\t\tconst wrapper = angular.element('<p></p>');\n\t\t\t\twrapper.append(processor(angular.element(controlTemplate)));\n\t\t\t\tcontrolTemplate = wrapper[0].innerHTML;\n\t\t\t}\n\t\t\t\n\t\t\tfunction registerType ( type, modelTemplate, displayTemplate ) {\n\t\t\t\ttemplates.model[type] = modelTemplate;\n\t\t\t\tif(displayTemplate) {\n\t\t\t\t\ttemplates.display[type] = displayTemplate;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tmodifyTemplate(function ( ) {\n\t\t\t\treturn angular.element(wrapperTemplate);\t\n\t\t\t});\n\t\t\t\n\t\t\tmodifyControlTemplate(function ( ) {\n\t\t\t\treturn angular.element(controlTemplate);\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\t$get: [ '$compile', function ( $compile ) {\n\t\t\t\t\t\n\t\t\t\t\tfunction getCompiler ( type, controlType, template ) {\n\t\t\t\t\t\tlet compiler,\n\t\t\t\t\t\t\tpool = compilers[type];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(template) {\n\t\t\t\t\t\t\tcompiler = $compile(template);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcompiler = pool[controlType];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!compiler && type === 'display') {\n\t\t\t\t\t\t\tcompiler = getCompiler(type, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!compiler) {\n\t\t\t\t\t\t\tthrow new Error(`${_.capitalize(type)} template for ${controlType} not found`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn compiler;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultTemplate = function ( ) {\n\t\t\t\t\t\treturn wrapperTemplate;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDefaultControlTemplate = function ( ) {\n\t\t\t\t\t\treturn controlTemplate;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getModelCompiler = function ( type, template ) {\n\t\t\t\t\t\treturn getCompiler('model', type, template);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvormTemplateService.getDisplayCompiler = function ( type, template ) {\n\t\t\t\t\t\treturn getCompiler('display', type, template);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tcompilers.model = _.mapValues(templates.model, function ( el ) {\n\t\t\t\t\t\tlet modelEl;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t_.some(el, function ( element ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet childEl;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(element.hasAttribute('ng-model')) {\n\t\t\t\t\t\t\t\tmodelEl = angular.element(element);\n\t\t\t\t\t\t\t} else if((childEl = element.querySelector('[ng-model]'))) {\n\t\t\t\t\t\t\t\tmodelEl = angular.element(childEl);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn !!modelEl;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(!modelEl) {\n\t\t\t\t\t\t\tmodelEl = el;\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\tmodelEl.attr('ng-model', 'delegate.value');\n\t\t\t\t\t\tmodelEl.attr('name', '{{delegate.getName()}}');\n\t\t\t\t\t\tmodelEl.attr('ng-required', 'vormControl.isRequired()');\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn $compile(el);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tcompilers.display = _.mapValues(templates.display, function ( el ) {\n\t\t\t\t\t\treturn $compile(el);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn vormTemplateService;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tmodifyModelTemplates: modifyModelTemplates,\n\t\t\t\tmodifyDisplayTemplates: modifyDisplayTemplates,\n\t\t\t\tmodifyControlTemplate: modifyControlTemplate,\n\t\t\t\tmodifyTemplate: modifyTemplate,\n\t\t\t\tregisterType: registerType\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.config([ 'vormTemplateServiceProvider', function ( vormTemplateServiceProvider ) {\n\t\t\t\n\t\t\tconst templates = \n\t\t\t\t_('date datetime datetime-local email month number password search tel text time url week checkbox'.split(' '))\n\t\t\t\t\t.zipObject()\n\t\t\t\t\t.mapValues(function ( value, key ) {\n\t\t\t\t\t\tvar placeholder = _.includes('text search tel url email number password'.split(' '), key) ?\n\t\t\t\t\t\t\t`placeholder=\"{{vormControl.invokeData('placeholder')}}\"`\n\t\t\t\t\t\t\t: '';\n\t\t\t\t\t\treturn `<input type=\"${key}\" ${placeholder}/>`;\n\t\t\t\t\t})\n\t\t\t\t\t.value();\n\t\t\t\t\t\n\t\t\tfor(let type in templates) {\n\t\t\t\tvormTemplateServiceProvider.registerType(type, angular.element(templates[type]));\n\t\t\t}\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.config([ 'vormTemplateServiceProvider', function ( vormTemplateServiceProvider ) {\n\t\t\t\n\t\t\tconst el = angular.element(\n\t\t\t\t'<div class=\"vorm-radio-group\">' + \n\t\t\t\t\t'<label ng-repeat=\"option in vormControl.getOptions()\">' +\n\t\t\t\t\t\t'<input type=\"radio\" ng-model name=\"{{::vormField.getName()}}\" value=\"{{::option.value}}\"/>' + \n\t\t\t\t\t\t'{{::option.label}}' + \n\t\t\t\t\t'</label>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t\t\n\t\t\tvormTemplateServiceProvider.registerType('radio', el);\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.config([ 'vormTemplateServiceProvider', function ( vormTemplateServiceProvider ) {\n\t\t\t\n\t\t\tconst el = angular.element(`<select ng-options=\"option.value as option.label for option in vormControl.getOptions()\"><option value=\"\" ng-show=\"!!vormControl.invokeData('notSelectedLabel')\">{{vormControl.invokeData('notSelectedLabel')}}</option></select>`);\n\t\t\t\n\t\t\tvormTemplateServiceProvider.registerType('select', el);\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.config([ 'vormTemplateServiceProvider', function ( vormTemplateServiceProvider ) {\n\t\t\t\n\t\t\tconst el = angular.element(`<textarea placeholder=\"{{vormControl.invokeData('placeholder')}}\"></textarea>`);\n\t\t\t\n\t\t\tvormTemplateServiceProvider.registerType('textarea', el);\n\t\t\t\n\t\t}]);\n\t\n})();\n"],"sourceRoot":"/source/"}