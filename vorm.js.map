{"version":3,"sources":["_.js","VormEvent.js","VormFieldCtrl.js","VormValueType.js","ngModel.js","vormChange.js","vormField.js","vormFieldGenerator.js","vormForm.js","vormInput.js","vormSubmit.js","vormTemplateService.js"],"names":["angular","module","factory","$document","$window","VormEvent","CustomEvent","type","data","detail","error","event","createEvent","initCustomEvent","VormValueType","name","element","setModelValue","model","value","$viewChangeListeners","$modelValue","$$writeModelToScope","listeners","handleModelChange","dispatchEvent","ctrl","models","changeListeners","valueType","SINGLE","getName","addModel","push","removeModel","_","pull","getModels","getValue","undefined","LIST","pluck","NAMED","each","$name","getValueType","setValueType","indexOf","Error","setValue","index","modelsToChange","concat","val","key","find","split","forEach","capitalized","substr","toUpperCase","propertyName","setName","method","outerArgs","arguments","apply","constant","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_step","_arr","_iterator","next","done","length","TypeError","directive","VormFieldCtrl","require","link","scope","attrs","controllers","_controllers","ngModel","vormField","vorm","addField","$on","removeField","$parse","handleChange","cb","$event","vormChange","bind","controller","$scope","$element","$attrs","$eval","extend","this","controllerAs","vormTemplateService","template","getDefaultTemplate","config","label","getModelTemplate","getInputTemplate","listener","fields","submitListeners","field","getFields","getValues","obj","indexBy","mapValues","fn","transclude","vormFieldGenerator","then","compileFunc","clone","replaceWith","console","log","handleSubmit","$values","vormSubmit","provider","defaultWrapper","$get"],"mappings":"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","file":"vorm.js","sourcesContent":["/*global require*/\n(function ( ) {\n\t\n\tangular.module('vorm', []);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormEvent', [ '$document', '$window', function ( $document, $window ) {\n\t\t\t\n\t\t\tvar VormEvent;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tvar event = new $window.CustomEvent('vormchange'); // jshint ignore:line\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\treturn new $window.CustomEvent(type, {\n\t\t\t\t\t\tdetail: data\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t} catch ( error ) {\n\t\t\t\tVormEvent = function ( type, data ) {\n\t\t\t\t\tvar event = $document[0].createEvent('CustomEvent');\n\t\t\t\t\tevent.initCustomEvent(type, true, true, data);\n\t\t\t\t\treturn event;\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\treturn VormEvent;\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.factory('VormFieldCtrl', [ 'VormEvent', 'VormValueType', function ( VormEvent, VormValueType ) {\n\t\t\t\n\t\t\treturn function ( name, element ) {\n\t\t\t\t\n\t\t\t\tvar ctrl = {},\n\t\t\t\t\tmodels = [],\n\t\t\t\t\tchangeListeners = [],\n\t\t\t\t\tvalueType = VormValueType.SINGLE;\n\t\t\t\t\n\t\t\t\tfunction setModelValue ( model, value ) {\n\t\t\t\t\t// $$writeModelToScope calls the view listeners\n\t\t\t\t\t// and we don't really want that\n\t\t\t\t\tvar { $viewChangeListeners, $modelValue } = model;\n\t\t\t\t\t\t\n\t\t\t\t\tmodel.$viewChangeListeners = [];\n\t\t\t\t\tmodel.$modelValue = value;\n\t\t\t\t\tmodel.$$writeModelToScope();\n\t\t\t\t\t\n\t\t\t\t\t// reset all the things\n\t\t\t\t\tmodel.listeners = $viewChangeListeners;\n\t\t\t\t\tmodel.$modelValue = $modelValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction handleModelChange ( ) {\n\t\t\t\t\telement.dispatchEvent(new VormEvent('vormchange', { name: name } ));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tctrl.getName = function ( ) {\n\t\t\t\t\treturn name;\n\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\tctrl.addModel = function ( model ) {\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tmodel.$viewChangeListeners.push(handleModelChange);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.removeModel = function ( model ) {\n\t\t\t\t\t_.pull(models, model);\n\t\t\t\t\t_.pull(model.$viewChangeListeners, handleModelChange);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getModels = function ( ) {\n\t\t\t\t\treturn models;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValue = function ( ) {\n\t\t\t\t\tvar value;\n\t\t\t\t\t\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tvalue = models[0] ? models[0].$modelValue : undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\tvalue = _.pluck(models, '$modelValue');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t\t_.each(models, function ( model) {\n\t\t\t\t\t\t\tvalue[model.$name] = model.$modelValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn value;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.getValueType = function ( ) {\n\t\t\t\t\treturn valueType;\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValueType = function ( type ) {\n\t\t\t\t\tif([ VormValueType.SINGLE, VormValueType.LIST, VormValueType.NAMED ].indexOf(type) === -1) {\n\t\t\t\t\t\tthrow new Error('Unsupported VormValueType: ' + VormValueType);\n\t\t\t\t\t}\n\t\t\t\t\tvalueType = type;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.setValue = function ( value ) {\n\t\t\t\t\tswitch(valueType) {\n\t\t\t\t\t\tcase VormValueType.SINGLE:\n\t\t\t\t\t\tif(models[0]) {\n\t\t\t\t\t\t\tsetModelValue(models[0], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.LIST:\n\t\t\t\t\t\t_.each(models, function ( model, index ) {\n\t\t\t\t\t\t\tsetModelValue(model, value[index]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase VormValueType.NAMED:\n\t\t\t\t\t\tlet modelsToChange = models.concat();\n\t\t\t\t\t\t_.each(value, function ( val, key ) {\n\t\t\t\t\t\t\tvar model = _.find(models, { $name: key });\n\t\t\t\t\t\t\tif(model) {\n\t\t\t\t\t\t\t\tsetModelValue(model, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_.pull(modelsToChange, model);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(modelsToChange, function ( model ) {\n\t\t\t\t\t\t\tsetModelValue(model, undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tctrl.changeListeners = changeListeners;\n\t\t\t\t\n\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\tvar capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\tpropertyName = '$' + type,\n\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ].indexOf(type) !== -1 ? 'every' : 'some';\n\t\t\t\t\t\t\n\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\treturn models[method](function ( model ) {\n\t\t\t\t\t\t\treturn model[propertyName];\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif(method !== 'valid' && method !== 'invalid') {\n\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmodels.forEach(function ( model ) {\n\t\t\t\t\t\t\t\tmodel['$' + setName].apply(model, outerArgs);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn ctrl;\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.constant('VormValueType',{\n\t\t\tSINGLE: 'single',\n\t\t\tLIST: 'list',\n\t\t\tNAMED: 'named'\n\t\t});\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('ngModel', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'ngModel', '^?vormField', '^?vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tvar [ ngModel, vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vormField || vorm) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!vormField) {\n\t\t\t\t\t\t\tvormField = new VormFieldCtrl(attrs.ngModel, element[0]);\n\t\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormField.addModel(ngModel);\n\t\t\t\t\t\t\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvormField.removeModel(ngModel);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormChange', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tlink: function ( scope, element, attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar cb;\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormChange);\n\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( event, name ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$event: event,\n\t\t\t\t\t\t\t$name: name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telement.bind('vormchange', handleChange);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormField', [ 'VormFieldCtrl', function ( VormFieldCtrl ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'vormField', '^?vormForm' ],\n\t\t\t\tcontroller: [ '$scope', '$element', '$attrs', function ( $scope, $element, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar name = $scope.$eval($attrs.vormField) || $attrs.ngModel;\n\t\t\t\t\t\n\t\t\t\t\tangular.extend(this, new VormFieldCtrl(name, $element[0]));\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormField',\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tvar [ vormField, vorm ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vorm) {\n\t\t\t\t\t\tvorm.addField(vormField);\n\t\t\t\t\t\tscope.$on('$destroy', function ( ) {\n\t\t\t\t\t\t\tvorm.removeField(vormField);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormFieldGenerator', [ 'vormTemplateService', function ( vormTemplateService ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormFieldGenerator' ],\n\t\t\t\ttemplate: function ( ) {\n\t\t\t\t\treturn vormTemplateService.getDefaultTemplate();\n\t\t\t\t},\n\t\t\t\tcontroller: [ '$scope', '$attrs', function ( $scope, $attrs ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tconfig = $scope.$eval($attrs.config) || {},\n\t\t\t\t\t\ttemplate;\n\t\t\t\t\t\n\t\t\t\t\tconfig = _.extend(config, { \n\t\t\t\t\t\tname: $attrs.name,\n\t\t\t\t\t\ttype: $attrs.type,\n\t\t\t\t\t\tlabel: $attrs.label,\n\t\t\t\t\t\ttemplate: $scope.$eval($attrs.label)\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(!config.name || !config.type) {\n\t\t\t\t\t\tthrow new Error('Missing one of required arguments: name, type ');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttemplate = vormTemplateService.getModelTemplate(config.type, config.template);\n\t\t\t\t\t\n\t\t\t\t\tctrl.getInputTemplate = function ( ) {\n\t\t\t\t\t\treturn template;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\treturn ctrl;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormFieldGenerator'\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular,_*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormForm', [ '$window', function ( $window ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\tscope: true,\n\t\t\t\trequire: [ 'form' ],\n\t\t\t\tcontroller: [ '$element', function ( $element ) {\n\t\t\t\t\t\n\t\t\t\t\tvar ctrl = this,\n\t\t\t\t\t\tfields = [],\n\t\t\t\t\t\tchangeListeners = [],\n\t\t\t\t\t\tsubmitListeners = [];\n\t\t\t\t\t\t\n\t\t\t\t\tfunction handleChange ( ) {\n\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// $element[0].dispatchEvent(new $window.Event('vormchange'));\n\t\t\t\t\t\t\n\t\t\t\t\t\t_.each(changeListeners, function ( listener ) {\n\t\t\t\t\t\t\tlistener.apply(ctrl, outerArgs);\t\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tctrl.addField = function ( field ) {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\tfield.changeListeners.push(handleChange);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.removeField = function ( field ) {\n\t\t\t\t\t\t_.pull(fields, field);\n\t\t\t\t\t\t_.pull(field.changeListeners, handleChange);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getFields = function ( ) {\n\t\t\t\t\t\treturn fields;\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.getValues = function ( ) {\n\t\t\t\t\t\tvar obj;\n\t\t\t\t\t\t\n\t\t\t\t\t\tobj = _(fields).indexBy(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getName();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.mapValues(function ( field ) {\n\t\t\t\t\t\t\t\treturn field.getValue();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.value();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tctrl.changeListeners = changeListeners;\n\t\t\t\t\tctrl.submitListeners = submitListeners;\n\t\t\t\t\t\n\t\t\t\t\t'valid invalid dirty pristine touched untouched'.split(' ').forEach(function ( type ) {\n\t\t\t\t\t\tvar capitalized = type.substr(0,1).toUpperCase() + type.substr(1),\n\t\t\t\t\t\t\tgetName = 'is' + capitalized,\n\t\t\t\t\t\t\tsetName = 'set' + capitalized,\n\t\t\t\t\t\t\tmethod = [ 'valid', 'pristine', 'untouched' ] ? 'every' : 'some';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tctrl[getName] = function ( ) {\n\t\t\t\t\t\t\treturn fields[method](function ( field ) {\n\t\t\t\t\t\t\t\treturn field[getName]();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(method !== 'valid' && method !== 'invalid') {\n\t\t\t\t\t\t\tctrl[setName] = function ( ) {\n\t\t\t\t\t\t\t\tvar outerArgs = arguments;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfields.forEach(function ( field ) {\n\t\t\t\t\t\t\t\t\tfield[setName].apply(field, outerArgs);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$element.bind('submit', function ( ) {\n\t\t\t\t\t\t_.each(submitListeners, function ( fn ) { fn(); });\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn ctrl;\n\t\t\t\t\t\n\t\t\t\t}],\n\t\t\t\tcontrollerAs: 'vormForm'\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.directive('vormInput', [ function ( ) { \n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ '^?vormFieldGenerator' ],\n\t\t\t\tscope: true,\n\t\t\t\tcontrollerAs: 'vormInput',\n\t\t\t\tlink: function ( scope, element, attrs, controllers, transclude ) {\n\t\t\t\t\t\n\t\t\t\t\tvar [ vormFieldGenerator ] = controllers;\n\t\t\t\t\t\n\t\t\t\t\tif(vormFieldGenerator) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvormFieldGenerator.getInputTemplate()\n\t\t\t\t\t\t\t.then(function ( compileFunc ) {\n\t\t\t\t\t\t\t\tcompileFunc(scope, function ( clone ) {\n\t\t\t\t\t\t\t\t\telement.replaceWith(clone);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function ( error ) {\n\t\t\t\t\t\t\t\tconsole.log('Error loading input template:', error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t} else if(transclude) {\n\t\t\t\t\t\ttransclude(function(clone) {\n\t\t\t\t\t\t  \telement.replaceWith(clone);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('vormInput needs either a transclude function or vormFieldGenerator.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t}]);\n\t\n})();\n","/*global angular*/\n(function ( ) { \n\t\n\tangular.module('vorm')\n\t\t.directive('vormSubmit', [ '$parse', function ( $parse ) {\n\t\t\t\n\t\t\treturn {\n\t\t\t\trequire: [ 'vormForm' ],\n\t\t\t\tlink: function ( scope, element, attrs, controllers ) {\n\t\t\t\t\t\n\t\t\t\t\tvar [ vorm ] = controllers,\n\t\t\t\t\t\tcb;\n\t\t\t\t\t\n\t\t\t\t\tfunction handleSubmit ( ) {\n\t\t\t\t\t\tcb(scope, {\n\t\t\t\t\t\t\t$values: vorm.getValues()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcb = $parse(attrs.vormSubmit);\n\t\t\t\t\t\n\t\t\t\t\telement.bind('submit', handleSubmit);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n})();\n","/*global angular*/\n(function ( ) {\n\t\n\tangular.module('vorm')\n\t\t.provider('vormTemplateService', [ function ( ) {\n\t\t\t\n\t\t\tvar vormTemplateService = {},\n\t\t\t\tdefaultWrapper,\n\t\t\t\twrapper;\n\t\t\t\t\n\t\t\tdefaultWrapper = `\n\t\t\t\t<div class=\"vorm-field\"\n\t\t\t\t\tng-class=\"vormField.getClassObj()\"\n\t\t\t\t\t>\n\t\t\t\t\t<div class=\"vorm-field-label\">\n\t\t\t\t\t\t{{vormFieldTemplate.getLabel()}}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<ul class=\"vorm-input-list\">\n\t\t\t\t\t\t<li class=\"vorm-input\" ng-repeat=\"model in vormField.getModels()\">\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"vorm-field-status\">\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t\t\t\n\t\t\t\n\t\t\treturn {\n\t\t\t\t$get: function ( ) {\n\t\t\t\t\t\n\t\t\t\t\treturn vormTemplateService;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t}]);\n\t\n})();\n"],"sourceRoot":"/source/"}